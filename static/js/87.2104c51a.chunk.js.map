{"version":3,"file":"static/js/87.2104c51a.chunk.js","mappings":"mYAOaA,G,QAAUC,EAAAA,GAAAA,IAAH,6XAkBPC,GAAaD,EAAAA,EAAAA,IAAOE,EAAAA,GAAPF,CAAH,2YAmBVG,EAAkBH,EAAAA,GAAAA,IAAH,+CAIfI,EAAgBJ,EAAAA,GAAAA,IAAH,ugBAwBbK,EAAcL,EAAAA,GAAAA,IAAH,sKAWXM,EAAoBN,EAAAA,GAAAA,IAAH,mQAYjBO,EAAcP,EAAAA,GAAAA,MAAH,+JAWXQ,EAAYR,EAAAA,GAAAA,IAAH,obAwBTS,EAAYT,EAAAA,GAAAA,MAAH,uIAWTU,EAAYV,EAAAA,GAAAA,GAAH,sTAgBTW,EAAOX,EAAAA,GAAAA,EAAH,0OAcJY,EAASZ,EAAAA,GAAAA,IAAH,kSAkBNa,GAAeb,EAAAA,GAAAA,IAAH,gDAIZc,GAAcd,EAAAA,GAAAA,MAAH,qYAuBXe,IAAcf,EAAAA,EAAAA,IAAOgB,EAAAA,GAAPhB,CAAH,q2BA8CXiB,IAAmBjB,EAAAA,EAAAA,IAAOkB,IAAPlB,CAAH,+xBAyChBmB,GAAoBnB,EAAAA,GAAAA,IAAH,+2FAkIjBoB,GAAcpB,EAAAA,GAAAA,IAAH,gSAoBXqB,GAAYrB,EAAAA,GAAAA,OAAH,muBA2CTsB,GAAWtB,EAAAA,GAAAA,IAAH,4VAqBRuB,GAAavB,EAAAA,GAAAA,IAAH,8VAqBVwB,GAAexB,EAAAA,GAAAA,IAAH,k0B,UChfnByB,GAAmBC,EAAAA,KAAaC,MAAM,CAC1CC,KAAMF,EAAAA,KAEHG,IAAI,GAAI,sCACRC,SAAS,4BACZC,MAAOL,EAAAA,KAAaM,QARH,oBAQuB,6BACxCC,SAAUP,EAAAA,KACVQ,MAAOR,EAAAA,KAAaG,IAAI,GAAI,uCAC5BM,MAAOT,EAAAA,KAEJS,MAAM,6BACNL,SAAS,+BAGDM,GAAW,WACtB,IAAMC,GAAOC,EAAAA,EAAAA,IAAYC,EAAAA,IACzB,GAAkCC,EAAAA,EAAAA,UAAS,IAA3C,eAAOC,EAAP,KAAkBC,EAAlB,KACA,GAAgCF,EAAAA,EAAAA,UAAS,IAAzC,eAAOG,EAAP,KAAiBC,EAAjB,KACA,GAAoCJ,EAAAA,EAAAA,WAAS,GAA7C,eAAOK,EAAP,KAAmBC,EAAnB,KAEMC,GAAWC,EAAAA,EAAAA,OAEjBC,EAAAA,EAAAA,YAAU,WAAO,IAAD,EACRC,EAAO,CACXtB,KAAMS,EAAKT,MAAQ,GACnBG,MAAOM,EAAKN,OAAS,GACrBE,UAAc,OAAJI,QAAI,IAAJA,GAAA,UAAAA,EAAMJ,gBAAN,eAAgBkB,MAAM,EAAG,MAAO,IAAIC,KAC9ClB,MAAOG,EAAKH,OAAS,GACrBC,MAAOE,EAAKF,OAAS,GACrBkB,OAAQ,MAEVX,EAAaL,EAAKiB,WAClBV,EAAYP,EAAKT,MACjB2B,GAAiB,UAAKL,GACvB,GAAE,CAACb,IAGJ,OAA0CG,EAAAA,EAAAA,UAAS,CACjDZ,KAAM,GACNyB,OAAQ,GACRtB,MAAO,GACPE,SAAU,IAAImB,KACdlB,MAAO,GACPC,MAAO,KANT,eAAOqB,EAAP,KAAsBD,EAAtB,KAsBA,GAAoBE,EAAAA,EAAAA,MAAZC,EAAR,EAAQA,EAAGC,EAAX,EAAWA,MAEXC,EAAAA,EAAAA,gBAAe,OAAQC,EAAAA,IACvBD,EAAAA,EAAAA,gBAAe,KAAME,EAAAA,GAErB,OAAgCtB,EAAAA,EAAAA,UAAS,IAAzC,eAAOuB,EAAP,KAAiBC,EAAjB,KAUA,OARAf,EAAAA,EAAAA,YAAU,WACc,OAAlBU,EAAKI,SACPC,EAAY,MAEZA,EAAY,OAEf,GAAE,CAACL,EAAKI,YAGP,UAAC,KAAD,CACEE,oBAAoB,EACpBT,cAAeA,EACf/B,iBAAkBA,GAClByC,SAhCiB,SAACC,EAAD,GAA4B,IAAjBC,EAAgB,EAAhBA,UAC9BtB,GAAc,GACdqB,EAAOlC,SAAW,IAAImB,KAAKe,EAAOlC,UAAUoC,cAAcC,MAAM,KAAK,GACvDvB,GAASwB,EAAAA,EAAAA,IAAWJ,IAC1BK,MAAK,SAAUC,GACrB3B,GAAc,EACf,IACDS,EAAiBY,GACjBC,GACD,EAmBC,SAMG,gBACCM,EADD,EACCA,MACAC,EAFD,EAECA,OACAC,EAHD,EAGCA,QACAT,EAJD,EAICA,OACAU,EALD,EAKCA,aACAC,EAND,EAMCA,WACAC,EAPD,EAOCA,aACAC,EARD,EAQCA,cACAC,EATD,EASCA,WATD,OAWC,UAAClF,EAAD,WACE,WAACE,EAAD,CAAYiF,aAAa,MAAMhB,SAAUW,EAAzC,UAEGhC,IAAc,UAAC,IAAD,KACf,WAAC1C,EAAD,YACE,UAACC,EAAD,UACGqC,GACC,UAACpC,EAAD,CAAa8E,IAAI,SAASC,IAAK3C,KAE/B,UAACnC,EAAD,UACGqC,EAAWA,EAAS,GAAG0C,cAAgB,QAK9C,WAAC9E,EAAD,CAAa+E,QAAQ,SAArB,WACE,UAAC9E,EAAD,WACE,iBAAK+E,KAAI,UAAKC,EAAAA,EAAL,wBAEX,UAAC/E,EAAD,CACEgF,GAAG,SACHC,KAAK,OACLC,OAAO,mCACP/D,KAAK,SACLgE,SAAU,SAAAC,GACJA,EAAEC,OAAOC,QACXf,EAAc,SAAUa,EAAEC,OAAOC,MAAM,IACvCd,GAAW,kBAAKL,GAAN,IAAevB,QAAQ,KACjCX,EAAasD,IAAIC,gBAAgBJ,EAAEC,OAAOC,MAAM,KAEnD,WAMP,UAACrF,EAAD,UAAY2B,EAAKT,QACjB,UAACjB,EAAD,UAAO+C,EAAE,WAGT,WAAC9C,EAAD,YAEE,UAACC,GAAD,WACE,WAACC,GAAD,CACEwE,QAAQ,OACRY,UAAS,UACPtB,EAAQhD,KAAQ+C,EAAO/C,KAAO,QAAU,UAAa,IAHzD,UAMG8B,EAAE,cACH,UAAC3C,GAAD,CACE2E,KAAK,OACL9D,KAAK,OACL6D,GAAG,OACHS,UAAS,UACPtB,EAAQhD,KAAQ+C,EAAO/C,KAAO,QAAU,UAAa,IAEvDuE,MAAOhC,EAAOvC,KACdgE,SAAUb,EACVqB,OAAQtB,EACRuB,YAAY,oBAIb1B,EAAO/C,MAAQgD,EAAQhD,MACtB,UAACN,GAAD,WACE,iBAAKiE,KAAI,UAAKC,EAAAA,EAAL,yBAET,MACFb,EAAO/C,MAAQgD,EAAQhD,MACvB,UAACL,GAAD,WACE,iBAAKgE,KAAI,UAAKC,EAAAA,EAAL,2BAET,MAGJ,UAAChE,GAAD,UAAeoD,EAAQhD,MAAQ+C,EAAO/C,aAK1C,UAACT,GAAD,WACE,WAACL,GAAD,CACEwE,QAAQ,WACRY,UAAS,UACP/B,EAAOlC,UAAY2C,EAAQ3C,SACvB0C,EAAO1C,SACL,QACA,UACF,IAPR,UAUGyB,EAAE,aACH,UAACzC,GAAD,CACEiF,UAAS,UACPtB,EAAQ3C,SACJ0C,EAAO1C,SACL,QACA,UACF,IAENqE,OAAQvC,EACRnC,KAAK,WACL6D,GAAG,WACHC,KAAK,OACLa,iBAAkB,EAClBJ,MAAOhC,EAAOlC,SACduE,cAAe,SAAAC,GAAS,OAAIA,EAAUtD,MAAM,EAAG,EAAvB,EACxBuD,mBAAiB,EACjBC,kBAAgB,EAChBC,aAAa,SACbC,uBAAwB,IACxBC,wBAAsB,EACtBC,SAAU,IAAI3D,KAAKe,EAAOlC,UAC1B+E,WAAW,aACXpB,SAAU,SAAAC,GACRb,EAAc,WAAYa,GAC1BZ,GAAW,kBAAKL,GAAN,IAAe3C,UAAU,IACpC,EACDgF,QAAS,IAAI7D,QAIf,UAAChC,GAAD,CACE8E,UAAS,UACPtB,EAAQ3C,SAAY0C,EAAO1C,SAAW,GAAK,UAAa,IAF5D,UAKE,iBAAKsD,KAAI,UAAKC,EAAAA,EAAL,8BAIX,UAAChE,GAAD,UACGoD,EAAQ3C,UAAY0C,EAAO1C,iBAMlC,UAACpB,GAAD,WACE,WAACC,GAAD,CACEwE,QAAQ,QACRY,UAAS,UACPtB,EAAQzC,MAASwC,EAAOxC,MAAQ,QAAU,UAAa,IAH3D,UAKC,SAEC,UAACpB,GAAD,CACEmF,UAAS,UACPtB,EAAQzC,MAASwC,EAAOxC,MAAQ,QAAU,UAAa,IAEzD+E,UAAQ,EACRxB,KAAK,QACL9D,KAAK,QACL6D,GAAG,QACHU,MAAOhC,EAAOhC,MACdyD,SAAUb,EACVqB,OAAQtB,EACRuB,YAAY,qBAGb1B,EAAOxC,OAASyC,EAAQzC,OACvB,UAACb,GAAD,WACE,iBAAKiE,KAAI,UAAKC,EAAAA,EAAL,yBAET,MACFb,EAAOxC,OAASyC,EAAQzC,OACxB,UAACZ,GAAD,WACE,iBAAKgE,KAAI,UAAKC,EAAAA,EAAL,2BAET,MAEJ,UAAChE,GAAD,UAAeoD,EAAQzC,OAASwC,EAAOxC,cAK3C,UAACtB,GAAD,WACE,WAACC,GAAD,CACEwE,QAAQ,QACRY,UAAS,UACP/B,EAAOpC,OAAS6C,EAAQ7C,MACpB4C,EAAO5C,MACL,QACA,UACF,IAPR,UAUG2B,EAAE,UACH,UAAC3C,GAAD,CACEmF,UAAS,UACP/B,EAAOpC,OAAS6C,EAAQ7C,MACpB4C,EAAO5C,MACL,QACA,UACF,IAEN2D,KAAK,MACL9D,KAAK,QACL6D,GAAG,QACHU,MAAOhC,EAAOpC,MACd6D,SAAUb,EACVqB,OAAQtB,EACRuB,YAAY,kBAIb1B,EAAO5C,OAAS6C,EAAQ7C,OACvB,UAACT,GAAD,WACE,iBAAKiE,KAAI,UAAKC,EAAAA,EAAL,yBAET,KACHrB,EAAOpC,QAAU4C,EAAO5C,OAAS6C,EAAQ7C,OACxC,UAACR,GAAD,WACE,iBAAKgE,KAAI,UAAKC,EAAAA,EAAL,2BAET,MAGJ,UAAChE,GAAD,UAAeoD,EAAQ7C,OAAS4C,EAAO5C,cAK3C,UAAClB,GAAD,WACE,WAACC,GAAD,CACEwE,QAAQ,QACRY,UAAS,UACP/B,EAAOjC,OAAS0C,EAAQ1C,MACpByC,EAAOzC,MACL,QACA,UACF,IAPR,UASC,SAEC,UAACnB,GAAD,CACEmF,UAAS,UACP/B,EAAOjC,OAAS0C,EAAQ1C,MACpByC,EAAOzC,MACL,QACA,UACF,IAENwD,KAAK,OACL9D,KAAK,QACL6D,GAAG,QACHU,MAAOhC,EAAOjC,MACd0D,SAAUb,EACVqB,OAAQtB,EACRuB,YAAY,uBAGb1B,EAAOzC,OAAS0C,EAAQ1C,OACvB,UAACZ,GAAD,WACE,iBAAKiE,KAAI,UAAKC,EAAAA,EAAL,yBAET,KACHrB,EAAOjC,QAAUyC,EAAOzC,OAAS0C,EAAQ1C,OACxC,UAACX,GAAD,WACE,iBAAKgE,KAAI,UAAKC,EAAAA,EAAL,2BAET,MAEJ,UAAChE,GAAD,UAAeoD,EAAQ1C,OAASyC,EAAOzC,iBAI7C,UAACb,GAAD,CACEqE,KAAK,SACLwB,UAAWxC,IAAUP,EAAOvC,OAASuC,EAAOhC,OAASwC,EAAOxC,MAF9D,SAIGuB,EAAE,sBA3RV,GAkSN,ECnZD,GARoB,WAClB,OACE,2BACE,UAACtB,GAAD,KAGL,C","sources":["components/UserForm/UserForm.styled.js","components/UserForm/UserForm.jsx","pages/Account/AccountPage.jsx"],"sourcesContent":["import styled from 'styled-components';\nimport { Field, Form } from 'formik';\n\nimport DatePicker from 'react-datepicker';\nimport 'react-datepicker/dist/react-datepicker.css';\n\n// Container\nexport const Wrapper = styled.div`\n  background-color: var(--primary-background-color);\n  border-radius: 16px;\n  margin-top: 95px;\n  margin-bottom: 40px;\n\n  @media screen and (min-width: 768px) {\n    margin-top: 64px;\n    margin-bottom: 38px;\n  }\n  @media screen and (min-width: 1440px) {\n    margin-top: 32px;\n    margin-bottom: 32px;\n    min-height: calc(100vh - 148px);\n  }\n`;\n\n// Form\nexport const StyledForm = styled(Form)`\n  padding: 0 18px 40px 18px;\n  margin-left: auto;\n  margin-right: auto;\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n  background-color: var(--primary-background-color);\n  border-radius: 16px;\n\n  @media screen and (min-width: 768px) {\n    padding: 40px 175px;\n  }\n  @media screen and (min-width: 1440px) {\n    padding: 60px 165px;\n  }\n`;\n\n// Avatar\nexport const AvatarContainer = styled.div`\n  position: relative;\n`;\n\nexport const AvatarWrapper = styled.div`\n  position: relative;\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  overflow: hidden;\n  top: -30px;\n  width: 72px;\n  height: 72px;\n  border: 2px solid var(--accent-background-color);\n  border-radius: 50%;\n  background-color: var(--primary-background-color);\n\n  @media screen and (min-width: 768px) {\n    margin-bottom: 14px;\n    top: 0px;\n    width: 124px;\n    height: 124px;\n  }\n  @media screen and (min-width: 1440px) {\n    margin-bottom: 20px;\n  }\n`;\n\nexport const AvatarImage = styled.img`\n  text-align: center;\n  width: 100%;\n  height: auto;\n\n  @media screen and (min-width: 768px) {\n    width: 100%;\n    height: auto;\n  }\n`;\n\nexport const AvatarPlaceholder = styled.div`\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  width: 100%;\n  height: 100%;\n  border-radius: 50%;\n  background-color: var(--avatar-background-color);\n  color: var(--avatar-fill-color);\n  font-size: 48px;\n`;\n\nexport const AvatarLabel = styled.label`\n  position: absolute;\n  left: 43px;\n  top: 57px;\n\n  @media screen and (min-width: 768px) {\n    left: 76px;\n    top: 100px;\n  }\n`;\n\nexport const AvatarBtn = styled.svg`\n  position: absolute;\n  top: -28px;\n\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  width: 14px;\n  height: 14px;\n  padding: 2px;\n  border-radius: 50%;\n  cursor: pointer;\n  background-color: var(--accent-background-color);\n  stroke: var(--btn-text-color);\n\n  @media screen and (min-width: 768px) {\n    top: 5px;\n\n    width: 24px;\n    height: 24px;\n    padding: 3px;\n  }\n`;\n\nexport const AddAvatar = styled.input`\n  opacity: 0;\n  height: 0;\n  width: 0;\n  line-height: 0;\n  overflow: hidden;\n  padding: 0;\n  margin: 0;\n`;\n\n// User\nexport const UserTitle = styled.h2`\n  margin-left: auto;\n  margin-right: auto;\n  margin-bottom: 4px;\n  font-weight: 700;\n  font-size: 14px;\n  line-height: 1.3;\n  color: var(--calendar-digit-color);\n\n  @media screen and (min-width: 768px) {\n    font-size: 18px;\n    margin-bottom: 8px;\n    line-height: 1;\n  }\n`;\n\nexport const User = styled.p`\n  margin-bottom: 40px;\n  font-weight: 600;\n  font-size: 12px;\n  line-height: 1.16;\n  color: var(--label-text);\n\n  @media screen and (min-width: 768px) {\n    font-size: 14px;\n    line-height: 1.3;\n  }\n`;\n\n//  Inputs\nexport const Inputs = styled.div`\n  width: 100%;\n\n  @media screen and (min-width: 375px) {\n    width: 299px;\n  }\n\n  @media screen and (min-width: 768px) {\n    width: 354px;\n  }\n\n  @media screen and (min-width: 1440px) {\n    width: 758px;\n    column-count: 2;\n    column-gap: 50px;\n  }\n`;\n\nexport const InputWrapper = styled.div`\n  /* display: flex; */\n`;\n\nexport const StyledLabel = styled.label`\n  position: relative;\n  font-weight: 400;\n  font-size: 12px;\n  line-height: 1.16;\n  color: var(--primary-text-color);\n  margin: 0;\n  padding: 0;\n\n  &.error {\n    color: var(--text-error-color);\n  }\n\n  &.success {\n    color: var(--text-correct-color);\n  }\n\n  @media screen and (min-width: 768px) {\n    font-size: 14px;\n    line-height: 1.28;\n  }\n`;\n\nexport const StyledInput = styled(Field)`\n  margin-top: 8px;\n  width: 100%;\n  height: 42px;\n  margin-bottom: 18px;\n  padding: 14px 18px;\n  border: var(--border-account-input);\n  border-radius: 8px;\n  background: var(--primary-background-color);\n  font-weight: 600;\n  font-size: 14px;\n  line-height: 1.3;\n  color: var(--primary-text-color);\n  outline: none;\n\n  @media screen and (min-width: 375px) {\n    width: 299px;\n  }\n\n  @media screen and (min-width: 768px) {\n    margin-bottom: 24px;\n    width: 354px;\n    height: 46px;\n    font-size: 16px;\n    line-height: 1.13;\n  }\n\n  :disabled:hover {\n    border: var(--border-account-input);\n  }\n\n  :hover,\n  :focus {\n    border: 1px solid var(--primary-text-color);\n  }\n\n  &.error {\n    border: 1px solid var(--text-error-color);\n  }\n\n  &.success {\n    border: 1px solid var(--text-correct-color);\n  }\n`;\n\n// DatePicker\nexport const StyledDatePicker = styled(DatePicker)`\n  margin-top: 8px;\n  width: 100%;\n  height: 42px;\n  margin-bottom: 18px;\n  padding: 14px 18px;\n  border: var(--border-account-input);\n  border-radius: 8px;\n  background: var(--primary-background-color);\n  font-weight: 600;\n  font-size: 14px;\n  line-height: 1.3;\n  color: var(--primary-text-color);\n  outline: none;\n\n  :hover,\n  :focus {\n    border: 1px solid var(--primary-text-color);\n  }\n\n  &.error {\n    border: 1px solid var(--text-error-color);\n  }\n\n  &.success {\n    border: 1px solid var(--text-correct-color);\n  }\n\n  @media screen and (min-width: 375px) {\n    width: 299px;\n  }\n\n  @media screen and (min-width: 768px) {\n    margin-bottom: 24px;\n    width: 354px;\n    height: 46px;\n    font-size: 16px;\n    line-height: 1.13;\n  }\n`;\n\nexport const DatePickerWrapper = styled.div`\n  .react-datepicker {\n    background-color: var(--color-button-period-type);\n    border-radius: 16px;\n    overflow: hidden;\n    border: none;\n    color: var(--primary-background-color);\n    width: 100%;\n    height: auto;\n    display: flex;\n    justify-content: center;\n    font-size: 12px;\n    line-height: 2.2;\n\n    @media screen and (min-width: 375px) {\n      width: 300px;\n      height: 300px;\n      font-size: 15px;\n    }\n\n    @media screen and (min-width: 768px) {\n      position: absolute;\n      top: -80px;\n      width: 354px;\n      height: 340px;\n      font-size: 18px;\n    }\n  }\n\n  .react-datepicker__header {\n    background-color: var(--color-button-period-type);\n    border-bottom: 1px solid var(--border-color);\n  }\n\n  .react-datepicker__navigation-icon {\n    ::before {\n      border-color: var(--primary-background-color);\n    }\n  }\n\n  .react-datepicker__month-select,\n  .react-datepicker__year-select {\n    padding: 5px;\n    width: 90px;\n    background-color: var(--color-button-period-type);\n    border: 1px solid var(--primary-background-color);\n    border-radius: 24px;\n    color: var(--primary-background-color);\n\n    text-align: center;\n    font-size: 10px;\n    overflow-y: auto;\n    cursor: pointer;\n\n    @media screen and (min-width: 375px) {\n      width: 110px;\n      font-size: 14px;\n    }\n\n    @media screen and (min-width: 1440px) {\n      width: 120px;\n      font-size: 16px;\n    }\n\n    &:hover {\n      background-color: var(--color-button-period-type);\n    }\n    &:focus {\n      outline: none;\n    }\n\n    ::-webkit-scrollbar {\n      box-sizing: border-box;\n      width: 5px;\n    }\n\n    /* Track */\n    ::-webkit-scrollbar-track {\n      background: var(--primary-background-color);\n      border-radius: 10px;\n      margin-top: 15px;\n      margin-bottom: 15px;\n    }\n\n    /* Handle */\n    ::-webkit-scrollbar-thumb {\n      background: var(--color-button-period-type);\n      border-radius: 10px;\n    }\n\n    /* Handle on hover */\n    ::-webkit-scrollbar-thumb:hover {\n      background: var(--primary-text-color);\n    }\n  }\n\n  .react-datepicker__current-month {\n    color: var(--primary-background-color);\n  }\n\n  .react-datepicker__day-name {\n    color: var(--primary-background-color);\n  }\n\n  .react-datepicker__day {\n    color: var(--primary-background-color);\n    :hover,\n    :focus {\n      background-color: var(--auth-bg-color);\n      color: var(--hover-btn-background-color);\n      border-radius: 24px;\n      opacity: 0.7;\n    }\n  }\n\n  .react-datepicker__day--today,\n  .react-datepicker__day--selected {\n    background-color: var(--primary-background-color);\n    color: var(--accent-background-color);\n    border-radius: 24px;\n    opacity: 1;\n  }\n\n  .react-datepicker__day--weekend {\n    color: var(--primary-background-color);\n    opacity: 40%;\n  }\n`;\n\n// Chevron\nexport const ChevronDown = styled.svg`\n  position: absolute;\n  top: 75%;\n  left: 90%;\n  width: 13px;\n  height: 13px;\n  cursor: pointer;\n  transform: rotate(0deg);\n\n  :hover,\n  :focus {\n    fill: var(--accent-background-color);\n  }\n\n  &.success {\n    fill: var(--text-correct-color);\n  }\n`;\n\n// Submit Button\nexport const SubmitBtn = styled.button`\n  padding: 0;\n  margin-left: auto;\n  margin-right: auto;\n  margin-top: 22px;\n  width: 65%;\n  height: 46px;\n  border-radius: 16px;\n  border: none;\n  font-weight: 600;\n  font-size: 14px;\n  line-height: 1.3;\n  background: var(--accent-background-color);\n  color: var(--btn-text-color);\n  cursor: pointer;\n\n  :disabled {\n    cursor: not-allowed;\n  }\n\n  :hover,\n  :focus {\n    background: var(--hover-btn-background-color);\n  }\n\n  :disabled {\n    opacity: 0.4;\n  }\n\n  @media screen and (min-width: 375px) {\n    width: 195px;\n  }\n\n  @media screen and (min-width: 768px) {\n    width: 262px;\n    height: 48px;\n  }\n\n  @media screen and (min-width: 1440px) {\n    margin-top: 64px;\n  }\n`;\n\nexport const ErrorImg = styled.svg`\n  position: absolute;\n  top: 70%;\n  left: 87%;\n  fill: var(--text-error-color);\n  align-self: center;\n  width: 20px;\n  height: 20px;\n\n  @media screen and (min-width: 375px) {\n    left: 90%;\n  }\n\n  &.datePickerCheck {\n    left: 270px;\n    @media screen and (min-width: 768px) {\n      left: 320px;\n    }\n  }\n`;\n\nexport const CorrectImg = styled.svg`\n  position: absolute;\n  top: 70%;\n  left: 87%;\n  fill: var(--text-correct-color);\n  align-self: center;\n  width: 20px;\n  height: 20px;\n\n  @media screen and (min-width: 375px) {\n    left: 90%;\n  }\n\n  &.datePickerCheck {\n    left: 270px;\n    @media screen and (min-width: 768px) {\n      left: 320px;\n    }\n  }\n`;\n\nexport const ErrorMessage = styled.div`\n  position: absolute;\n  margin-top: -12px;\n  margin-left: auto;\n  margin-right: auto;\n  padding-left: 18px;\n  font-size: 12px;\n  line-height: 1.17;\n  overflow: hidden;\n  color: var(--text-error-color);\n  border-right: 0.15em solid var(--text-error-color);\n  white-space: nowrap;\n  letter-spacing: 0.08em;\n\n  animation: typing 3.5s steps(22, end) infinite,\n    blink 1s step-end infinite alternate;\n\n  @media screen and (min-width: 768px) {\n    margin-top: -16px;\n  }\n\n  @media screen and (min-width: 1440px) {\n    margin-top: -19px;\n  }\n\n  /* The typing effect */\n  @keyframes typing {\n    from {\n      width: 0;\n    }\n\n    to {\n      width: 80%;\n    }\n  }\n\n  /* The typewriter cursor effect */\n  @keyframes blink {\n    50% {\n      border-color: transparent;\n    }\n  }\n`;\n","import { useState, useEffect } from 'react';\nimport { useSelector, useDispatch } from 'react-redux';\nimport { selectUser } from 'redux/auth/selectors';\nimport { updateUser } from 'redux/auth/operations';\nimport { useTranslation } from 'react-i18next';\nimport { registerLocale } from 'react-datepicker';\nimport { enGB, uk } from 'date-fns/locale';\n\nimport { Formik } from 'formik';\nimport * as yup from 'yup';\nimport { Loader } from '../../utils/loader/loader';\nimport Icons from 'images/sprite.svg';\n\nimport {\n  Wrapper,\n  StyledForm,\n  AvatarContainer,\n  AvatarWrapper,\n  AvatarImage,\n  AvatarPlaceholder,\n  AvatarLabel,\n  AvatarBtn,\n  AddAvatar,\n  UserTitle,\n  User,\n  Inputs,\n  InputWrapper,\n  StyledInput,\n  StyledLabel,\n  StyledDatePicker,\n  SubmitBtn,\n  DatePickerWrapper,\n  ErrorMessage,\n  ErrorImg,\n  CorrectImg,\n  ChevronDown,\n} from './UserForm.styled';\n\n// Validation for phone\nconst phoneRegex = /^\\+?3?8?(0\\d{9})$/;\n\n// Validation Schema YUP\nconst validationSchema = yup.object().shape({\n  name: yup\n    .string()\n    .max(16, 'Name must not exceed 16 characters')\n    .required('Name is a required field'),\n  phone: yup.string().matches(phoneRegex, 'Phone number is not valid'),\n  birthday: yup.date(),\n  skype: yup.string().max(16, 'Skype must not exceed 16 characters'),\n  email: yup\n    .string()\n    .email('Email must be valid email')\n    .required('Email is a required field'),\n});\n\nexport const UserForm = () => {\n  const user = useSelector(selectUser);\n  const [avatarUrl, setAvatarUrl] = useState('');\n  const [username, setUsername] = useState('');\n  const [showLoader, setShowLoader] = useState(false);\n\n  const dispatch = useDispatch();\n\n  useEffect(() => {\n    const data = {\n      name: user.name || '',\n      phone: user.phone || '',\n      birthday: user?.birthday?.slice(0, 10) || new Date(),\n      skype: user.skype || '',\n      email: user.email || '',\n      avatar: null,\n    };\n    setAvatarUrl(user.avatarURL);\n    setUsername(user.name);\n    setInitialValues({ ...data });\n  }, [user]);\n\n  // Initial values for form\n  const [initialValues, setInitialValues] = useState({\n    name: '',\n    avatar: '',\n    phone: '',\n    birthday: new Date(),\n    skype: '',\n    email: '',\n  });\n\n  // Submit form\n  const handleSubmit = (values, { resetForm }) => {\n    setShowLoader(true);\n    values.birthday = new Date(values.birthday).toISOString().split('T')[0];\n    let promise = dispatch(updateUser(values));\n    promise.then(function (response) {\n      setShowLoader(false);\n    });\n    setInitialValues(values);\n    resetForm();\n  };\n\n  // Translation\n  const { t, i18n } = useTranslation();\n\n  registerLocale('enGB', enGB);\n  registerLocale('uk', uk);\n\n  const [language, setLanguage] = useState('');\n\n  useEffect(() => {\n    if (i18n.language === 'ua') {\n      setLanguage('uk');\n    } else {\n      setLanguage('enGB');\n    }\n  }, [i18n.language]);\n\n  return (\n    <Formik\n      enableReinitialize={true}\n      initialValues={initialValues}\n      validationSchema={validationSchema}\n      onSubmit={handleSubmit}\n    >\n      {({\n        dirty,\n        errors,\n        touched,\n        values,\n        handleSubmit,\n        handleBlur,\n        handleChange,\n        setFieldValue,\n        setTouched,\n      }) => (\n        <Wrapper>\n          <StyledForm autoComplete=\"off\" onSubmit={handleSubmit}>\n            {/* Avatar */}\n            {showLoader && <Loader />}\n            <AvatarContainer>\n              <AvatarWrapper>\n                {avatarUrl ? (\n                  <AvatarImage alt=\"avatar\" src={avatarUrl} />\n                ) : (\n                  <AvatarPlaceholder>\n                    {username ? username[0].toUpperCase() : ''}\n                  </AvatarPlaceholder>\n                )}\n              </AvatarWrapper>\n\n              <AvatarLabel htmlFor=\"avatar\">\n                <AvatarBtn>\n                  <use href={`${Icons}#profile-plus-s`}></use>\n                </AvatarBtn>\n                <AddAvatar\n                  id=\"avatar\"\n                  type=\"file\"\n                  accept=\"image/png, image/gif, image/jpeg\"\n                  name=\"avatar\"\n                  onChange={e => {\n                    if (e.target.files) {\n                      setFieldValue('avatar', e.target.files[0]);\n                      setTouched({ ...touched, avatar: true });\n                      setAvatarUrl(URL.createObjectURL(e.target.files[0]));\n                    }\n                  }}\n                ></AddAvatar>\n              </AvatarLabel>\n            </AvatarContainer>\n\n            {/* User data */}\n            <UserTitle>{user.name}</UserTitle>\n            <User>{t('user')}</User>\n\n            {/* Inputs */}\n            <Inputs>\n              {/* Name */}\n              <InputWrapper>\n                <StyledLabel\n                  htmlFor=\"name\"\n                  className={`${\n                    touched.name ? (errors.name ? 'error' : 'success') : ''\n                  }`}\n                >\n                  {t('User Name')}\n                  <StyledInput\n                    type=\"text\"\n                    name=\"name\"\n                    id=\"name\"\n                    className={`${\n                      touched.name ? (errors.name ? 'error' : 'success') : ''\n                    }`}\n                    value={values.name}\n                    onChange={handleChange}\n                    onBlur={handleBlur}\n                    placeholder=\"Enter your name\"\n                  />\n\n                  {/* Error image */}\n                  {errors.name && touched.name ? (\n                    <ErrorImg>\n                      <use href={`${Icons}#icon-input-error`}></use>\n                    </ErrorImg>\n                  ) : null}\n                  {!errors.name && touched.name ? (\n                    <CorrectImg>\n                      <use href={`${Icons}#icon-input-correct`}></use>\n                    </CorrectImg>\n                  ) : null}\n\n                  {/* Error message */}\n                  <ErrorMessage>{touched.name && errors.name}</ErrorMessage>\n                </StyledLabel>\n              </InputWrapper>\n\n              {/* Birthday */}\n              <DatePickerWrapper>\n                <StyledLabel\n                  htmlFor=\"birthday\"\n                  className={`${\n                    values.birthday && touched.birthday\n                      ? errors.birthday\n                        ? 'error'\n                        : 'success'\n                      : ''\n                  }`}\n                >\n                  {t('Birthday')}\n                  <StyledDatePicker\n                    className={`${\n                      touched.birthday\n                        ? errors.birthday\n                          ? 'error'\n                          : 'success'\n                        : ''\n                    }`}\n                    locale={language}\n                    name=\"birthday\"\n                    id=\"birthday\"\n                    type=\"date\"\n                    calendarStartDay={1}\n                    value={values.birthday}\n                    formatWeekDay={nameOfDay => nameOfDay.slice(0, 1)}\n                    showMonthDropdown\n                    showYearDropdown\n                    dropdownMode=\"select\"\n                    yearDropdownItemNumber={100}\n                    scrollableYearDropdown\n                    selected={new Date(values.birthday)}\n                    dateFormat=\"yyyy-MM-dd\"\n                    onChange={e => {\n                      setFieldValue('birthday', e);\n                      setTouched({ ...touched, birthday: true });\n                    }}\n                    maxDate={new Date()}\n                  />\n\n                  {/* Chevron */}\n                  <ChevronDown\n                    className={`${\n                      touched.birthday ? (errors.birthday ? '' : 'success') : ''\n                    }`}\n                  >\n                    <use href={`${Icons}#user-chevron-down-sf`}></use>\n                  </ChevronDown>\n\n                  {/* Error message */}\n                  <ErrorMessage>\n                    {touched.birthday && errors.birthday}\n                  </ErrorMessage>\n                </StyledLabel>\n              </DatePickerWrapper>\n\n              {/* Email */}\n              <InputWrapper>\n                <StyledLabel\n                  htmlFor=\"email\"\n                  className={`${\n                    touched.email ? (errors.email ? 'error' : 'success') : ''\n                  }`}\n                >\n                  Email\n                  <StyledInput\n                    className={`${\n                      touched.email ? (errors.email ? 'error' : 'success') : ''\n                    }`}\n                    disabled\n                    type=\"email\"\n                    name=\"email\"\n                    id=\"email\"\n                    value={values.email}\n                    onChange={handleChange}\n                    onBlur={handleBlur}\n                    placeholder=\"Enter your email\"\n                  />\n                  {/* Error image */}\n                  {errors.email && touched.email ? (\n                    <ErrorImg>\n                      <use href={`${Icons}#icon-input-error`}></use>\n                    </ErrorImg>\n                  ) : null}\n                  {!errors.email && touched.email ? (\n                    <CorrectImg>\n                      <use href={`${Icons}#icon-input-correct`}></use>\n                    </CorrectImg>\n                  ) : null}\n                  {/* Error message */}\n                  <ErrorMessage>{touched.email && errors.email}</ErrorMessage>\n                </StyledLabel>\n              </InputWrapper>\n\n              {/* Phone */}\n              <InputWrapper>\n                <StyledLabel\n                  htmlFor=\"phone\"\n                  className={`${\n                    values.phone && touched.phone\n                      ? errors.phone\n                        ? 'error'\n                        : 'success'\n                      : ''\n                  }`}\n                >\n                  {t('Phone')}\n                  <StyledInput\n                    className={`${\n                      values.phone && touched.phone\n                        ? errors.phone\n                          ? 'error'\n                          : 'success'\n                        : ''\n                    }`}\n                    type=\"tel\"\n                    name=\"phone\"\n                    id=\"phone\"\n                    value={values.phone}\n                    onChange={handleChange}\n                    onBlur={handleBlur}\n                    placeholder=\"+380XXXXXXXXX\"\n                  />\n\n                  {/* Error image */}\n                  {errors.phone && touched.phone ? (\n                    <ErrorImg>\n                      <use href={`${Icons}#icon-input-error`}></use>\n                    </ErrorImg>\n                  ) : null}\n                  {values.phone && !errors.phone && touched.phone ? (\n                    <CorrectImg>\n                      <use href={`${Icons}#icon-input-correct`}></use>\n                    </CorrectImg>\n                  ) : null}\n\n                  {/* Error message */}\n                  <ErrorMessage>{touched.phone && errors.phone}</ErrorMessage>\n                </StyledLabel>\n              </InputWrapper>\n\n              {/* Skype */}\n              <InputWrapper>\n                <StyledLabel\n                  htmlFor=\"skype\"\n                  className={`${\n                    values.skype && touched.skype\n                      ? errors.skype\n                        ? 'error'\n                        : 'success'\n                      : ''\n                  }`}\n                >\n                  Skype\n                  <StyledInput\n                    className={`${\n                      values.skype && touched.skype\n                        ? errors.skype\n                          ? 'error'\n                          : 'success'\n                        : ''\n                    }`}\n                    type=\"text\"\n                    name=\"skype\"\n                    id=\"skype\"\n                    value={values.skype}\n                    onChange={handleChange}\n                    onBlur={handleBlur}\n                    placeholder=\"Add a skype number\"\n                  />\n                  {/* Error image */}\n                  {errors.skype && touched.skype ? (\n                    <ErrorImg>\n                      <use href={`${Icons}#icon-input-error`}></use>\n                    </ErrorImg>\n                  ) : null}\n                  {values.skype && !errors.skype && touched.skype ? (\n                    <CorrectImg>\n                      <use href={`${Icons}#icon-input-correct`}></use>\n                    </CorrectImg>\n                  ) : null}\n                  {/* Error message */}\n                  <ErrorMessage>{touched.skype && errors.skype}</ErrorMessage>\n                </StyledLabel>\n              </InputWrapper>\n            </Inputs>\n            <SubmitBtn\n              type=\"submit\"\n              disabled={!dirty || !values.name || !values.email || errors.email}\n            >\n              {t('Save changes')}\n            </SubmitBtn>\n          </StyledForm>\n        </Wrapper>\n      )}\n    </Formik>\n  );\n};\n","import { UserForm } from '../../components/UserForm/UserForm';\n\nconst AccountPage = () => {\n  return (\n    <div>\n      <UserForm />\n    </div>\n  );\n};\n\nexport default AccountPage;\n"],"names":["Wrapper","styled","StyledForm","Form","AvatarContainer","AvatarWrapper","AvatarImage","AvatarPlaceholder","AvatarLabel","AvatarBtn","AddAvatar","UserTitle","User","Inputs","InputWrapper","StyledLabel","StyledInput","Field","StyledDatePicker","DatePicker","DatePickerWrapper","ChevronDown","SubmitBtn","ErrorImg","CorrectImg","ErrorMessage","validationSchema","yup","shape","name","max","required","phone","matches","birthday","skype","email","UserForm","user","useSelector","selectUser","useState","avatarUrl","setAvatarUrl","username","setUsername","showLoader","setShowLoader","dispatch","useDispatch","useEffect","data","slice","Date","avatar","avatarURL","setInitialValues","initialValues","useTranslation","t","i18n","registerLocale","enGB","uk","language","setLanguage","enableReinitialize","onSubmit","values","resetForm","toISOString","split","updateUser","then","response","dirty","errors","touched","handleSubmit","handleBlur","handleChange","setFieldValue","setTouched","autoComplete","alt","src","toUpperCase","htmlFor","href","Icons","id","type","accept","onChange","e","target","files","URL","createObjectURL","className","value","onBlur","placeholder","locale","calendarStartDay","formatWeekDay","nameOfDay","showMonthDropdown","showYearDropdown","dropdownMode","yearDropdownItemNumber","scrollableYearDropdown","selected","dateFormat","maxDate","disabled"],"sourceRoot":""}