{"version":3,"file":"static/js/353.6258470c.chunk.js","mappings":"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","sources":["redux/auth/selectors.js","components/Auth/AuthNavigate/AuthNavigate.styled.js","components/Auth/AuthNavigate/AuthNavigate.jsx","components/Auth/RegisterForm/RegisterForm.styled.js","components/Auth/RegisterForm/RegisterForm.jsx","pages/Register/RegisterPage.styled.js","pages/Register/RegisterPage.jsx"],"sourcesContent":["export const selectIsLoggedIn = state => state.auth.isLoggedIn;\n\nexport const selectUser = state => state.auth.user;\n\nexport const selectIsRefreshing = state => state.auth.isRefreshing;\n\nexport const selectToken = state => state.auth.token;\n","import styled from 'styled-components';\nimport { Link } from 'react-router-dom';\n\nexport const AuthLink = styled(Link)`\n  font-style: normal;\n  font-weight: 600;\n  font-size: 12px;\n  line-height: 14px;\n  border-bottom: 1px solid var(--color-button-period-type);\n  text-decoration: none;\n  color: var(--accent-background-color);\n  text-shadow: 0px 47px 355px rgba(0, 0, 0, 0.07),\n    0px 9.4px 57.6875px rgba(0, 0, 0, 0.035);\n  &:hover,\n  :focus {\n    color: var(--accent-background-color);\n    border-color: var(--accent-background-color);\n    transform: scale(1.1);\n  }\n\n  @media (min-width: 768px) {\n    font-size: 18px;\n    line-height: 24px;\n  }\n`;\n","import { AuthLink } from './AuthNavigate.styled';\n\nexport const AuthNavigate = ({ route, content }) => (\n  <AuthLink to={route}>{content}</AuthLink>\n);\n","import styled from 'styled-components';\n\nexport const Wrapper = styled.div`\n  position: relative;\n  height: 100vh;\n  width: 100%;\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n  justify-content: center;\n  background-color: var(--auth-bg-color);\n`;\n\nexport const RegisterFormContainer = styled.div`\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n  justify-content: center;\n`;\n\nexport const Form = styled.form`\n  display: flex;\n  flex-direction: column;\n  padding: 40px 24px;\n  width: 335px;\n  margin-bottom: 18px;\n  background-color: var(--primary-background-color);\n  border-radius: 8px;\n\n  @media (min-width: 768px) {\n    width: 480px;\n    padding: 40px;\n    margin-bottom: 24px;\n  }\n`;\n\nexport const RegisterFormTitle = styled.h1`\n  font-style: normal;\n  font-weight: 600;\n  font-size: 1.125rem;\n  line-height: 1.5rem;\n  color: var(--accent-background-color);\n  text-shadow: 0px 47px 355px rgba(0, 0, 0, 0.07),\n    0px 9.4px 57.6875px rgba(0, 0, 0, 0.035);\n  margin-bottom: 22px;\n`;\n\nexport const RegisterLabel = styled.label`\n  display: flex;\n  flex-direction: column;\n  margin-bottom: 0.5rem;\n  font-style: normal;\n  font-weight: 600;\n  font-size: 12px;\n  line-height: 15px;\n  color: var(--secondary-text-color);\n`;\n\nexport const RegisterInput = styled.input`\n  background-color: var(--primary-background-color);\n  outline: none;\n  border: 1px solid rgba(220, 227, 229, 0.6);\n  border-radius: 8px;\n  padding: 0.875rem;\n  width: 100%;\n  &::placeholder {\n    font-family: 'Inter', sans-serif;\n    font-style: normal;\n    font-weight: 400;\n    font-size: 16px;\n    line-height: 18px;\n    color: #dce3e5;\n  }\n`;\n\nexport const RegisterParaghraph = styled.p`\n  font-style: normal;\n  font-weight: 600;\n  font-size: 14px;\n  line-height: 17px;\n  margin-top: 24px;\n  margin-bottom: 8px;\n  color: var(--primary-text-color);\n\n  @media (min-width: 768px) {\n    margin-top: 18px;\n  }\n`;\n\nexport const RegisterButton = styled.button`\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  width: 100%;\n  height: 46px;\n  column-gap: 0.8125rem;\n  padding: 14px;\n  margin-top: 30px;\n  background: var(--accent-background-color);\n  box-shadow: 4px 2px 16px rgba(136, 165, 191, 0.48);\n  border-radius: 16px;\n  border: none;\n  cursor: pointer;\n\n  &:hover,\n  :focus {\n    transform: scale(1.02);\n  }\n\n  @media (min-width: 768px) {\n    width: 400px;\n    height: 56px;\n  }\n`;\n\nexport const ButtonText = styled.span`\n  display: flex;\n  flex-wrap: nowrap;\n  font-style: normal;\n  font-weight: 600;\n  font-size: 14px;\n  line-height: 18px;\n  letter-spacing: -0.02em;\n  color: var(--primary-background-color);\n\n  @media (min-width: 768px) {\n    font-size: 18px;\n    line-height: 24px;\n  }\n`;\n\nexport const Svg = styled.svg`\n  align-self: center;\n  width: 18px;\n  height: 18px;\n  fill: transparent;\n  stroke: var(--primary-background-color);\n\n  @media (min-width: 768px) {\n    width: 20px;\n    height: 20px;\n    margin-left: 13px;\n  }\n`;\n\nexport const ErrorMessage = styled.span`\n  font-style: normal;\n  font-weight: 600;\n  font-size: 14px;\n  line-height: 17px;\n  color: var(--text-error-color);\n`;\n\nexport const RegisterGooseImage = styled.img`\n  display: none;\n  @media (min-width: 1350px) {\n    position: fixed;\n    width: 400px;\n    height: 416px;\n    left: 50px;\n    bottom: 0;\n    display: block;\n  }\n`;\n","import { useDispatch, useSelector } from 'react-redux';\nimport { useEffect } from 'react';\nimport { register } from '../../../redux/auth/operations';\nimport { Formik } from 'formik';\nimport * as yup from 'yup';\nimport { nanoid } from 'nanoid';\n\nimport { setAuthHeader } from '../../../redux/auth/operations';\nimport { refreshUser } from '../../../redux/auth/operations';\nimport { selectToken } from '../../../redux/auth/selectors';\nimport { AuthNavigate } from '../../../components/Auth/AuthNavigate/AuthNavigate';\n\nimport {\n  Wrapper,\n  RegisterButton,\n  RegisterFormContainer,\n  RegisterFormTitle,\n  Form,\n  RegisterInput,\n  RegisterLabel,\n  RegisterParaghraph,\n  ErrorMessage,\n  ButtonText,\n  Svg,\n  RegisterGooseImage,\n} from './RegisterForm.styled';\nimport gooseRegister2x from '../../../images/goose-register@2x.png';\nimport gooseRegister from '../../../images/goose-register.png';\nimport Icons from '../../../images/sprite.svg';\n\nconst routes = {\n  register: '/register',\n};\n\nconst validationSchema = yup.object().shape({\n  name: yup\n    .string()\n    .min(3)\n    .max(30, 'Name must be at most 30 characters')\n    .required('Please enter your name'),\n  email: yup\n    .string()\n    .email('Email must be valid email')\n    .required('Email is a required field'),\n  password: yup\n    .string()\n    .min(8, 'Password must be at least 8 characters')\n    .max(16, 'Password must be at most 16 characters')\n    .required('Password is a required field'),\n});\n\nexport const RegisterForm = () => {\n  const dispatch = useDispatch();\n  const emailId = nanoid();\n  const passwordId = nanoid();\n  const nameId = nanoid();\n\n  const token = useSelector(selectToken);\n  setAuthHeader(token);\n  useEffect(() => {\n    dispatch(refreshUser());\n  }, [token, dispatch]);\n\n  return (\n    <Formik\n      initialValues={{\n        name: '',\n        email: '',\n        password: '',\n      }}\n      onSubmit={(values, { resetForm }) => {\n        dispatch(\n          register({\n            name: values.name,\n            email: values.email,\n            password: values.password,\n          })\n        );\n        resetForm();\n      }}\n      validationSchema={validationSchema}\n    >\n      {({\n        errors,\n        touched,\n        values,\n        handleSubmit,\n        handleBlur,\n        handleChange,\n        isSubmitting,\n      }) => (\n        <Wrapper>\n          <RegisterFormContainer>\n            <Form autoComplete=\"off\" onSubmit={handleSubmit}>\n              <RegisterFormTitle>Sign Up</RegisterFormTitle>\n              <RegisterLabel htmlFor={nameId}>\n                <RegisterParaghraph>Name</RegisterParaghraph>\n                <RegisterInput\n                  type=\"text\"\n                  name=\"name\"\n                  id={nameId}\n                  onChange={handleChange}\n                  onBlur={handleBlur}\n                  value={values.name}\n                  placeholder=\"Enter your name\"\n                />\n              </RegisterLabel>\n              <ErrorMessage>\n                {errors.name && touched.name && errors.name}\n              </ErrorMessage>\n              <RegisterLabel htmlFor={emailId}>\n                <RegisterParaghraph>Email</RegisterParaghraph>\n                <RegisterInput\n                  type=\"email\"\n                  name=\"email\"\n                  id={emailId}\n                  onChange={handleChange}\n                  onBlur={handleBlur}\n                  value={values.email}\n                  placeholder=\"Enter email\"\n                />\n              </RegisterLabel>\n              <ErrorMessage>\n                {errors.email && touched.email && errors.email}\n              </ErrorMessage>\n              <RegisterLabel htmlFor={passwordId}>\n                <RegisterParaghraph>Password</RegisterParaghraph>\n                <RegisterInput\n                  type=\"password\"\n                  name=\"password\"\n                  id={passwordId}\n                  onChange={handleChange}\n                  onBlur={handleBlur}\n                  value={values.password}\n                  placeholder=\"Enter password\"\n                />\n              </RegisterLabel>\n              <ErrorMessage>\n                {errors.password && touched.password && errors.password}\n              </ErrorMessage>\n              <RegisterButton type=\"submit\" disabled={isSubmitting}>\n                <ButtonText>\n                  Sign Up\n                  <Svg>\n                    <use href={`${Icons}#login-door-sf`}></use>\n                  </Svg>\n                </ButtonText>\n              </RegisterButton>\n            </Form>\n            <AuthNavigate route={routes.login} content=\"Log In\" />\n            <RegisterGooseImage\n              srcSet={`${gooseRegister} 1x, ${gooseRegister2x} 2x`}\n              src={gooseRegister2x}\n              alt=\"goose\"\n            />\n          </RegisterFormContainer>\n        </Wrapper>\n      )}\n    </Formik>\n  );\n};\n","import styled from 'styled-components';\n\nexport const Container = styled.div`\n  min-height: 100vh;\n  background: var(--auth-bg-color);\n  display: flex;\n  flex-direction: column;\n  justify-content: center;\n  align-items: center;\n  padding-top: 20px;\n  padding-bottom: 20px;\n`;\n","import { RegisterForm } from '../../components/Auth/RegisterForm/RegisterForm';\nimport { AuthNavigate } from '../../components/Auth/AuthNavigate/AuthNavigate';\nimport { Container } from '../Register/RegisterPage.styled';\n\nconst RegisterPage = () => {\n  return (\n    <Container>\n      <RegisterForm />\n      <AuthNavigate route={'/login'} pageName={'Log In'} />\n    </Container>\n  );\n};\n\nexport default RegisterPage;\n"],"names":["selectToken","state","auth","token","AuthLink","styled","Link","AuthNavigate","route","content","to","Wrapper","RegisterFormContainer","Form","RegisterFormTitle","RegisterLabel","RegisterInput","RegisterParaghraph","RegisterButton","ButtonText","Svg","ErrorMessage","RegisterGooseImage","routes","register","validationSchema","yup","shape","name","min","max","required","email","password","RegisterForm","dispatch","useDispatch","emailId","nanoid","passwordId","nameId","useSelector","setAuthHeader","useEffect","refreshUser","initialValues","onSubmit","values","resetForm","errors","touched","handleSubmit","handleBlur","handleChange","isSubmitting","autoComplete","htmlFor","type","id","onChange","onBlur","value","placeholder","disabled","href","Icons","login","srcSet","gooseRegister","gooseRegister2x","src","alt","Container","pageName"],"sourceRoot":""}