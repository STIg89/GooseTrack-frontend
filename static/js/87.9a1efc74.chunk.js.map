{"version":3,"file":"static/js/87.9a1efc74.chunk.js","mappings":"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","sources":["components/UserForm/UserForm.styled.js","components/UserForm/UserForm.jsx","pages/Account/AccountPage.jsx"],"sourcesContent":["import styled from 'styled-components';\nimport { Field, Form } from 'formik';\n\nexport const Wrapper = styled.div`\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n  margin-left: auto;\n  margin-right: auto;\n  margin-top: 80px;\n  width: 335px;\n  background: var(---primary-background-color);\n  border-radius: 16px;\n\n  @media screen and (min-width: 768px) {\n    margin-top: 40px;\n    width: 704px;\n  }\n  @media screen and (min-width: 1440px) {\n    margin-top: 60px;\n    width: 1087px;\n  }\n`;\n\nexport const StyledForm = styled(Form)`\n  position: relative;\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n`;\n\nexport const AvatarWrapper = styled.div`\n  position: relative;\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  top: -30px;\n  width: 72px;\n  height: 72px;\n  border: 2px solid var(--accent-background-color);\n  border-radius: 50%;\n  background: var(---primary-background-color);\n  @media screen and (min-width: 768px) {\n    margin-top: 40px;\n    margin-bottom: 14px;\n    top: 0px;\n    width: 124px;\n    height: 124px;\n  }\n  @media screen and (min-width: 1440px) {\n    margin-top: 60px;\n    margin-bottom: 20px;\n  }\n`;\n\nexport const AvatarLabel = styled.label`\n  position: absolute;\n  left: 43px;\n  top: 57px;\n  @media screen and (min-width: 768px) {\n    left: 76px;\n    top: 100px;\n  }\n`;\n\nexport const AvatarBtn = styled.svg`\n  cursor: pointer;\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  width: 14px;\n  height: 14px;\n  padding: 2px;\n  border-radius: 50%;\n  background-color: var(--accent-background-color);\n  stroke: var(--primary-background-color);\n\n  @media screen and (min-width: 768px) {\n    width: 24px;\n    height: 24px;\n    padding: 3px;\n  }\n`;\n\nexport const AddAvatar = styled.input`\n  opacity: 0;\n  height: 0;\n  width: 0;\n  line-height: 0;\n  overflow: hidden;\n  padding: 0;\n  margin: 0;\n`;\n\nexport const UserTitle = styled.h2`\n  margin-left: auto;\n  margin-right: auto;\n  margin-bottom: 4px;\n  font-weight: 700;\n  font-size: 14px;\n  line-height: 1.3;\n  color: var(--calendar-digit-color);\n\n  @media screen and (min-width: 768px) {\n    font-size: 18px;\n    margin-bottom: 8px;\n    line-height: 1;\n  }\n`;\n\nexport const User = styled.p`\n  margin-bottom: 40px;\n  font-weight: 600;\n  font-size: 12px;\n  line-height: 1.16;\n  color: var(--calendar-digit-color);\n\n  @media screen and (min-width: 768px) {\n    font-size: 14px;\n    line-height: 1.3;\n  }\n`;\n\nexport const Inputs = styled.div`\n  position: relative;\n  display: flex;\n  flex-wrap: wrap;\n  justify-content: center;\n  width: 299px;\n  height: 392px;\n\n  @media screen and (min-width: 768px) {\n    width: 354px;\n    height: 458px;\n    justify-content: space-between;\n  }\n\n  @media screen and (min-width: 1440px) {\n    width: 758px;\n    height: 264px;\n  }\n`;\n\nexport const StyledLabel = styled.label`\n  font-weight: 400;\n  font-size: 12px;\n  line-height: 1.16;\n  color: var(--primary-text-color);\n  @media screen and (min-width: 768px) {\n    font-size: 14px;\n    line-height: 1.28;\n  }\n`;\n\nexport const StyledInput = styled(Field)`\n  margin-top: 8px;\n  width: 299px;\n  height: 42px;\n  margin-bottom: 18px;\n  padding: 14px 18px;\n  border: 1px solid rgba(17, 17, 17, 0.15);\n  border-radius: 8px;\n  background: var(---primary-background-color);\n  font-weight: 600;\n  font-size: 14px;\n  line-height: 1.3;\n  color: var(--primary-text-color);\n  outline: none;\n\n  @media screen and (min-width: 768px) {\n    margin-bottom: 24px;\n    width: 354px;\n    height: 46px;\n    font-size: 16px;\n    line-height: 1.13;\n  }\n`;\n\nexport const SubmitBtn = styled.button`\n  padding: 0;\n  margin-left: auto;\n  margin-right: auto;\n  margin-top: 40px;\n  margin-bottom: 40px;\n  width: 195px;\n  height: 46px;\n  border-radius: 16px;\n  border: none;\n  font-weight: 600;\n  font-size: 14px;\n  line-height: 1.3;\n  background: var(--accent-background-color);\n  color: var(--primary-background-color);\n  cursor: pointer;\n  :hover,\n  :focus {\n    background: var(--hover-btn-background-color);\n  }\n  @media screen and (min-width: 768px) {\n    width: 262px;\n    height: 48px;\n  }\n\n  @media screen and (min-width: 1440px) {\n    margin-top: 22px;\n    margin-bottom: 60px;\n  }\n`;\n","import { useState, useEffect } from 'react';\nimport Icons from 'images/sprite.svg';\n\nimport { Formik, ErrorMessage } from 'formik';\nimport * as yup from 'yup';\n\nimport {\n  Wrapper,\n  StyledForm,\n  AvatarWrapper,\n  AvatarLabel,\n  AvatarBtn,\n  AddAvatar,\n  UserTitle,\n  User,\n  Inputs,\n  StyledInput,\n  StyledLabel,\n  SubmitBtn,\n} from './UserForm.styled';\n\nconst phoneRegex = /^\\+?3?8?(0\\d{9})$/;\n\nconst validationSchema = yup.object().shape({\n  name: yup\n    .string()\n    .min(3, 'Name must be at least 3 characters')\n    .max(16, 'Name must not exceed 16 characters')\n    .required('Name is required'),\n  phone: yup\n    .string()\n    .matches(phoneRegex, 'Phone number is not valid')\n    .required('Phone is required'),\n  //   birthday: yup.date().format('DD-MM-YYYY'),\n  //   birthday: yup.date().default(() => new Date()),\n  skype: yup.string().max(16, 'Skype must not exceed 16 characters'),\n  email: yup\n    .string()\n    .email('Email must be valid email')\n    .required('Email is a required'),\n});\n\nexport const UserForm = () => {\n  const [formData, setFormData] = useState({\n    name: '',\n    phone: '',\n    birthday: '',\n    skype: '',\n    email: '',\n  });\n\n  // Get from local storage\n  useEffect(() => {\n    const storageFormData = localStorage.getItem('formData');\n    if (storageFormData) {\n      setFormData(JSON.parse(storageFormData));\n    }\n  }, []);\n\n  // Write to local storage\n  useEffect(() => {\n    localStorage.setItem('formData', JSON.stringify(formData));\n  }, [formData]);\n\n  // Initial values for form\n  const initialValues = {\n    name: formData.name || '',\n    phone: formData.phone || '',\n    birthday: formData.birthday || '',\n    skype: formData.skype || '',\n    email: formData.email || '',\n  };\n\n  // Submit form\n  const handleSubmit = (values, { resetForm }) => {\n    console.log(values);\n    resetForm();\n  };\n\n  return (\n    <Formik\n      initialValues={initialValues}\n      validationSchema={validationSchema}\n      onSubmit={handleSubmit}\n    >\n      {({\n        errors,\n        touched,\n        values,\n        handleSubmit,\n        handleBlur,\n        handleChange,\n        isSubmitting,\n      }) => (\n        <Wrapper>\n          <StyledForm autoComplete=\"off\" onSubmit={handleSubmit}>\n            {/* Avatar */}\n            <AvatarWrapper>\n              <img alt=\"\" src=\"\" />\n\n              <AvatarLabel htmlFor=\"avatar\">\n                {/* Plus button */}\n                <AvatarBtn>\n                  <use href={`${Icons}#profile-plus-s`}></use>\n                </AvatarBtn>\n\n                <AddAvatar id=\"avatar\" type=\"file\" name=\"avatar\"></AddAvatar>\n              </AvatarLabel>\n            </AvatarWrapper>\n\n            {/* User name */}\n            <UserTitle>User Name</UserTitle>\n            <User>User</User>\n\n            {/* Inputs */}\n            <Inputs>\n              {/* Name */}\n              <StyledLabel htmlFor=\"name\">\n                User Name\n                <StyledInput\n                  type=\"text\"\n                  name=\"name\"\n                  id=\"name\"\n                  value={values.name}\n                  onChange={handleChange}\n                  onBlur={handleBlur}\n                  placeholder=\"Enter your name\"\n                />\n                {/* {touched.name && !errors.name && <div color=\"green\" />} */}\n                {/* {touched.name && errors.name && <div color=\"red\" />} */}\n                <ErrorMessage name=\"name\" component=\"div\" />\n              </StyledLabel>\n\n              {/* Phone */}\n              <StyledLabel>\n                Phone\n                <StyledInput\n                  type=\"number\"\n                  name=\"phone\"\n                  id=\"phone\"\n                  value={values.phone ? values.phone : ''}\n                  onChange={handleChange}\n                  onBlur={handleBlur}\n                  placeholder=\"+380XXXXXXXXX\"\n                />\n                <ErrorMessage name=\"phone\" component=\"div\" />\n              </StyledLabel>\n\n              {/* Birthday */}\n              <StyledLabel>\n                Birthday\n                <StyledInput\n                  type=\"date\"\n                  name=\"birthday\"\n                  id=\"birthday\"\n                  value={values.birthday}\n                  onChange={handleChange}\n                  onBlur={handleBlur}\n                  placeholder=\"YYYY-MM-DD\"\n                />\n                <ErrorMessage name=\"birthday\" component=\"div\" />\n              </StyledLabel>\n\n              {/* Skype */}\n              <StyledLabel>\n                Skype\n                <StyledInput\n                  type=\"text\"\n                  name=\"skype\"\n                  id=\"skype\"\n                  value={values.skype ? values.skype : ''}\n                  onChange={handleChange}\n                  onBlur={handleBlur}\n                  placeholder=\"Add a skype number\"\n                />\n                <ErrorMessage name=\"skype\" component=\"div\" />\n              </StyledLabel>\n\n              {/* Email */}\n              <StyledLabel>\n                Email\n                <StyledInput\n                  type=\"email\"\n                  name=\"email\"\n                  id=\"email\"\n                  value={values.email}\n                  onChange={handleChange}\n                  onBlur={handleBlur}\n                  placeholder=\"Enter your email\"\n                />\n                <ErrorMessage name=\"email\" component=\"div\" />\n              </StyledLabel>\n            </Inputs>\n\n            <SubmitBtn type=\"submit\" disabled={isSubmitting}>\n              Save changes\n            </SubmitBtn>\n          </StyledForm>\n        </Wrapper>\n      )}\n    </Formik>\n  );\n};\n","import { UserForm } from '../../components/UserForm/UserForm';\n\nconst AccountPage = () => {\n  return (\n    <div>\n      <UserForm />\n    </div>\n  );\n};\n\nexport default AccountPage;\n"],"names":["Wrapper","styled","StyledForm","Form","AvatarWrapper","AvatarLabel","AvatarBtn","AddAvatar","UserTitle","User","Inputs","StyledLabel","StyledInput","Field","SubmitBtn","validationSchema","yup","shape","name","min","max","required","phone","matches","skype","email","UserForm","useState","birthday","formData","setFormData","useEffect","storageFormData","localStorage","getItem","JSON","parse","setItem","stringify","initialValues","onSubmit","values","resetForm","console","log","errors","touched","handleSubmit","handleBlur","handleChange","isSubmitting","autoComplete","alt","src","htmlFor","href","Icons","id","type","value","onChange","onBlur","placeholder","component","disabled"],"sourceRoot":""}