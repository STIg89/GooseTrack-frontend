{"version":3,"file":"static/js/978.99b371b4.chunk.js","mappings":"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","sources":["components/Auth/AuthNavigate/AuthNavigate.styled.js","components/Auth/AuthNavigate/AuthNavigate.jsx","components/Auth/RegisterForm/RegisterForm.styled.js","components/Auth/RegisterForm/RegisterForm.jsx","pages/Register/RegisterPage.jsx","pages/Register/RegisterPage.styled.js"],"sourcesContent":["import styled from 'styled-components';\nimport { Link } from 'react-router-dom';\n\nexport const AuthLink = styled(Link)`\n  font-style: normal;\n  font-weight: 600;\n  font-size: 12px;\n  line-height: 14px;\n  border-bottom: 1px solid var(--color-button-period-type);\n  text-decoration: none;\n  color: var(--accent-background-color);\n  text-shadow: var(--logo-txt-shadow);\n  &:hover,\n  :focus {\n    color: var(--accent-background-color);\n    border-color: var(--accent-background-color);\n    transform: scale(1.1);\n  }\n\n  @media (min-width: 768px) {\n    font-size: 18px;\n    line-height: 24px;\n  }\n\n  @media (max-width: 375px) {\n    width: 100%;\n    text-align: center;\n  }\n`;\n","import { AuthLink } from './AuthNavigate.styled';\n\nexport const AuthNavigate = ({ route, content }) => (\n  <AuthLink to={route}>\n    <span>{content}</span>\n  </AuthLink>\n);\n","import styled from 'styled-components';\n\nexport const Wrapper = styled.div`\n  position: relative;\n  height: 100vh;\n  width: 100%;\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n  justify-content: center;\n  background-color: var(--auth-bg-color);\n`;\n\nexport const StyleFormContainer = styled.div`\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n  justify-content: center;\n  @media (max-width: 375px) {\n    width: 100%;\n  }\n`;\n\nexport const Form = styled.form`\n  display: flex;\n  flex-direction: column;\n  padding: 40px 24px;\n  width: 335px;\n  margin-bottom: 18px;\n  background-color: var(--primary-background-color);\n  border-radius: 8px;\n  @media (min-width: 768px) {\n    width: 480px;\n    padding: 40px;\n    margin-bottom: 24px;\n  }\n  @media (max-width: 375px) {\n    width: 100%;\n  }\n`;\n\nexport const StyleFormTitle = styled.h1`\n  font-style: normal;\n  font-weight: 600;\n  font-size: 1.125rem;\n  line-height: 1.5rem;\n  color: var(--accent-background-color);\n  text-shadow: var(--logo-txt-shadow);\n  margin-bottom: 22px;\n`;\n\nexport const StyleLabel = styled.label`\n  display: flex;\n  flex-direction: column;\n  margin-bottom: 0.5rem;\n  font-style: normal;\n  font-weight: 600;\n  font-size: 12px;\n  line-height: 15px;\n  color: var(--secondary-text-color);\n`;\n\nexport const StyleInput = styled.input`\n  background-color: var(--primary-background-color);\n  outline: none;\n  border: var(--border-auth);\n  border-radius: 8px;\n  padding: 0.875rem;\n  width: 100%;\n  color: var(--calendar-digit-color);\n  &::placeholder {\n    font-style: normal;\n    font-weight: 400;\n    font-size: 16px;\n    line-height: 18px;\n    color: var(--auth-placeholder-color);\n  }\n`;\n\nexport const StyleParaghraph = styled.p`\n  font-style: normal;\n  font-weight: 600;\n  font-size: 14px;\n  line-height: 17px;\n  margin-top: 24px;\n  margin-bottom: 8px;\n  color: var(--primary-text-color);\n  @media (min-width: 768px) {\n    margin-top: 18px;\n  }\n`;\nexport const StyleButton = styled.button`\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  width: 100%;\n  height: 46px;\n  column-gap: 0.8125rem;\n  padding: 14px;\n  margin-top: 30px;\n  background: var(--accent-background-color);\n  box-shadow: var(--shadow-logout-btn);\n  border-radius: 16px;\n  border: none;\n  cursor: pointer;\n  &:hover,\n  :focus {\n    transform: scale(1.02);\n    background: var(--hover-btn-background-color);\n  }\n  @media (min-width: 768px) {\n    width: 400px;\n    height: 56px;\n  }\n  @media (max-width: 375px) {\n    width: 100%;\n    padding: 16px;\n    margin-bottom: 12px;\n  }\n`;\n\nexport const ButtonText = styled.span`\n  display: flex;\n  flex-wrap: nowrap;\n  font-style: normal;\n  font-weight: 600;\n  font-size: 14px;\n  line-height: 18px;\n  letter-spacing: -0.02em;\n  color: var(--btn-text-color);\n  @media (min-width: 768px) {\n    font-size: 18px;\n    line-height: 24px;\n  }\n`;\n\nexport const Svg = styled.svg`\n  align-self: center;\n  width: 18px;\n  height: 18px;\n  fill: transparent;\n  stroke: var(--btn-text-color);\n  @media (min-width: 768px) {\n    width: 20px;\n    height: 20px;\n    margin-left: 13px;\n  }\n`;\n\nexport const ErrorMessage = styled.span`\n  font-style: normal;\n  font-weight: 600;\n  font-size: 14px;\n  line-height: 17px;\n  color: var(--text-error-color);\n`;\n\nexport const RegisterGooseImage = styled.img`\n  display: none;\n  @media (min-width: 1350px) {\n    position: fixed;\n    width: 400px;\n    height: 416px;\n    left: 50px;\n    bottom: 0;\n    display: block;\n  }\n`;\n\nexport const LoginGooseImage = styled.img`\n  display: none;\n  @media (min-width: 1350px) {\n    position: fixed;\n    width: 368px;\n    height: 521px;\n    right: 60px;\n    bottom: 19px;\n    display: block;\n  }\n`;\n","import { useDispatch } from 'react-redux';\n// import { useEffect } from 'react';\nimport { register } from 'redux/auth/operations';\nimport { Formik } from 'formik';\nimport * as yup from 'yup';\nimport { nanoid } from 'nanoid';\n\n// import { setAuthHeader } from '../../../redux/auth/operations';\n// import { refreshUser } from '../../../redux/auth/operations';\n// import { selectToken } from '../../../redux/auth/selectors';\nimport { AuthNavigate } from 'components/Auth/AuthNavigate/AuthNavigate';\n\nimport {\n  Wrapper,\n  StyleButton,\n  StyleFormContainer,\n  StyleFormTitle,\n  Form,\n  StyleInput,\n  StyleLabel,\n  StyleParaghraph,\n  ErrorMessage,\n  ButtonText,\n  Svg,\n  RegisterGooseImage,\n} from './RegisterForm.styled';\nimport gooseRegister2x from 'images/goose-register@2x.png';\nimport gooseRegister from 'images/goose-register.png';\nimport Icons from 'images/sprite.svg';\n\nconst validationSchema = yup.object().shape({\n  name: yup\n    .string()\n    .min(3)\n    .max(30, 'Name must be at most 30 characters')\n    .required('Please enter your name'),\n  email: yup\n    .string()\n    .email('Email must be valid email')\n    .required('Email is a required field'),\n  password: yup\n    .string()\n    .min(8, 'Password must be at least 8 characters')\n    .max(16, 'Password must be at most 16 characters')\n    .required('Password is a required field'),\n});\n\nexport const RegisterForm = () => {\n  const dispatch = useDispatch();\n  const emailId = nanoid();\n  const passwordId = nanoid();\n  const nameId = nanoid();\n\n  return (\n    <Formik\n      initialValues={{\n        name: '',\n        email: '',\n        password: '',\n      }}\n      onSubmit={(values, { resetForm }) => {\n        dispatch(\n          register({\n            name: values.name,\n            email: values.email,\n            password: values.password,\n          })\n        );\n        resetForm();\n      }}\n      validationSchema={validationSchema}\n    >\n      {({\n        errors,\n        touched,\n        values,\n        handleSubmit,\n        handleBlur,\n        handleChange,\n        isSubmitting,\n      }) => (\n        <Wrapper>\n          <StyleFormContainer>\n            <Form autoComplete=\"off\" onSubmit={handleSubmit}>\n              <StyleFormTitle>Sign Up</StyleFormTitle>\n              <StyleLabel htmlFor={nameId}>\n                <StyleParaghraph>Name</StyleParaghraph>\n                <StyleInput\n                  type=\"text\"\n                  name=\"name\"\n                  id={nameId}\n                  onChange={handleChange}\n                  onBlur={handleBlur}\n                  value={values.name}\n                  placeholder=\"Enter your name\"\n                />\n              </StyleLabel>\n              <ErrorMessage>\n                {errors.name && touched.name && errors.name}\n              </ErrorMessage>\n              <StyleLabel htmlFor={emailId}>\n                <StyleParaghraph>Email</StyleParaghraph>\n                <StyleInput\n                  type=\"email\"\n                  name=\"email\"\n                  id={emailId}\n                  onChange={handleChange}\n                  onBlur={handleBlur}\n                  value={values.email}\n                  placeholder=\"Enter email\"\n                />\n              </StyleLabel>\n              <ErrorMessage>\n                {errors.email && touched.email && errors.email}\n              </ErrorMessage>\n              <StyleLabel htmlFor={passwordId}>\n                <StyleParaghraph>Password</StyleParaghraph>\n                <StyleInput\n                  type=\"password\"\n                  name=\"password\"\n                  id={passwordId}\n                  onChange={handleChange}\n                  onBlur={handleBlur}\n                  value={values.password}\n                  placeholder=\"Enter password\"\n                />\n              </StyleLabel>\n              <ErrorMessage>\n                {errors.password && touched.password && errors.password}\n              </ErrorMessage>\n              <StyleButton type=\"submit\" disabled={isSubmitting}>\n                <ButtonText>\n                  Sign Up\n                  <Svg>\n                    <use href={`${Icons}#login-door-sf`}></use>\n                  </Svg>\n                </ButtonText>\n              </StyleButton>\n            </Form>\n            <AuthNavigate route=\"/login\" content=\"Log In\" />\n            <RegisterGooseImage\n              srcSet={`${gooseRegister} 1x, ${gooseRegister2x} 2x`}\n              src={gooseRegister2x}\n              alt=\"goose\"\n            />\n          </StyleFormContainer>\n        </Wrapper>\n      )}\n    </Formik>\n  );\n};\n","import { RegisterForm } from '../../components/Auth/RegisterForm/RegisterForm';\nimport { AuthNavigate } from '../../components/Auth/AuthNavigate/AuthNavigate';\nimport { Container } from '../Register/RegisterPage.styled';\n\nconst RegisterPage = () => {\n  return (\n    <Container>\n      <RegisterForm />\n      <AuthNavigate route={'/login'} pageName={'Log In'} />\n    </Container>\n  );\n};\n\nexport default RegisterPage;\n","import styled from 'styled-components';\n\nexport const Container = styled.div`\n  min-height: 100vh;\n  background: var(--auth-bg-color);\n  display: flex;\n  flex-direction: column;\n  justify-content: center;\n  align-items: center;\n  padding-top: 20px;\n  padding-bottom: 20px;\n  @media (max-width: 375px) {\n    width: 100%;\n    padding-left: 20px;\n    padding-right: 20px;\n  }\n`;\n"],"names":["AuthLink","styled","Link","AuthNavigate","route","content","to","Wrapper","StyleFormContainer","Form","StyleFormTitle","StyleLabel","StyleInput","StyleParaghraph","StyleButton","ButtonText","Svg","ErrorMessage","RegisterGooseImage","LoginGooseImage","validationSchema","yup","shape","name","min","max","required","email","password","RegisterForm","dispatch","useDispatch","emailId","nanoid","passwordId","nameId","initialValues","onSubmit","values","resetForm","register","errors","touched","handleSubmit","handleBlur","handleChange","isSubmitting","autoComplete","htmlFor","type","id","onChange","onBlur","value","placeholder","disabled","href","Icons","srcSet","gooseRegister","gooseRegister2x","src","alt","pageName","Container"],"sourceRoot":""}