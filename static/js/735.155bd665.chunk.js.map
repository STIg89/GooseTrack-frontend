{"version":3,"file":"static/js/735.155bd665.chunk.js","mappings":"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","sources":["components/Auth/AuthNavigate/AuthNavigate.styled.js","components/Auth/AuthNavigate/AuthNavigate.jsx","components/Auth/RegisterForm/RegisterForm.styled.js","components/Auth/LoginForm/LoginForm.jsx","pages/Login/LoginPage.jsx","pages/Register/RegisterPage.styled.js"],"sourcesContent":["import styled from 'styled-components';\nimport { Link } from 'react-router-dom';\n\nexport const AuthLink = styled(Link)`\n  font-style: normal;\n  font-weight: 600;\n  font-size: 12px;\n  line-height: 14px;\n  border-bottom: 1px solid var(--color-button-period-type);\n  text-decoration: none;\n  color: var(--accent-background-color);\n  text-shadow: var(--logo-txt-shadow);\n  &:hover,\n  :focus {\n    color: var(--accent-background-color);\n    border-color: var(--accent-background-color);\n    transform: scale(1.1);\n  }\n\n  @media (min-width: 768px) {\n    font-size: 18px;\n    line-height: 24px;\n  }\n\n  @media (max-width: 375px) {\n    width: fit-content;\n    text-align: center;\n  }\n`;\n","import { AuthLink } from './AuthNavigate.styled';\n\nexport const AuthNavigate = ({ route, content }) => (\n  <AuthLink to={route}>\n    <span>{content}</span>\n  </AuthLink>\n);\n","import styled from 'styled-components';\n\nexport const Wrapper = styled.div`\n  position: relative;\n  height: 100vh;\n  width: 100%;\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n  justify-content: center;\n  background-color: var(--auth-bg-color);\n`;\n\nexport const StyleFormContainer = styled.div`\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n  justify-content: center;\n  @media (max-width: 375px) {\n    width: 100%;\n  }\n`;\n\nexport const Form = styled.form`\n  display: flex;\n  flex-direction: column;\n  padding: 40px 24px;\n  width: 335px;\n  margin-bottom: 18px;\n  background-color: var(--primary-background-color);\n  border-radius: 8px;\n  @media (min-width: 768px) {\n    width: 480px;\n    padding: 40px;\n    margin-bottom: 24px;\n  }\n  @media (max-width: 375px) {\n    width: 100%;\n  }\n`;\n\nexport const StyleFormTitle = styled.h1`\n  font-style: normal;\n  font-weight: 600;\n  font-size: 1.125rem;\n  line-height: 1.5rem;\n  color: var(--accent-background-color);\n  text-shadow: var(--logo-txt-shadow);\n  margin-bottom: 22px;\n`;\n\nexport const StyleLabel = styled.label`\n  display: flex;\n  flex-direction: column;\n  margin-bottom: 0.5rem;\n  font-style: normal;\n  font-weight: 600;\n  font-size: 12px;\n  line-height: 15px;\n  color: var(--secondary-text-color);\n`;\n\nexport const StyleInput = styled.input`\n  background-color: var(--primary-background-color);\n  outline: none;\n  border: var(--border-auth);\n  border-radius: 8px;\n  padding: 0.875rem;\n  width: 100%;\n  color: var(--calendar-digit-color);\n  &::placeholder {\n    font-style: normal;\n    font-weight: 400;\n    font-size: 16px;\n    line-height: 18px;\n    color: var(--auth-placeholder-color);\n  }\n`;\n\nexport const StyleParaghraph = styled.p`\n  font-style: normal;\n  font-weight: 600;\n  font-size: 14px;\n  line-height: 17px;\n  margin-top: 24px;\n  margin-bottom: 8px;\n  color: var(--primary-text-color);\n  @media (min-width: 768px) {\n    margin-top: 18px;\n  }\n`;\nexport const StyleButton = styled.button`\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  width: 100%;\n  height: 46px;\n  column-gap: 0.8125rem;\n  padding: 14px;\n  margin-top: 30px;\n  background: var(--accent-background-color);\n  box-shadow: var(--shadow-logout-btn);\n  border-radius: 16px;\n  border: none;\n  cursor: pointer;\n  transition: all var(--animation);\n  &:hover,\n  :focus {\n    transform: scale(1.02);\n    background: var(--hover-btn-background-color);\n  }\n  @media (min-width: 768px) {\n    width: 400px;\n    height: 56px;\n  }\n  @media (max-width: 375px) {\n    width: 100%;\n    padding: 16px;\n    margin-bottom: 12px;\n  }\n`;\n\nexport const ButtonText = styled.span`\n  display: flex;\n  flex-wrap: nowrap;\n  font-style: normal;\n  font-weight: 600;\n  font-size: 14px;\n  line-height: 18px;\n  letter-spacing: -0.02em;\n  color: var(--btn-text-color);\n  @media (min-width: 768px) {\n    font-size: 18px;\n    line-height: 24px;\n  }\n`;\n\nexport const Svg = styled.svg`\n  align-self: center;\n  width: 18px;\n  height: 18px;\n  fill: transparent;\n  stroke: var(--btn-text-color);\n  @media (min-width: 768px) {\n    width: 20px;\n    height: 20px;\n    margin-left: 13px;\n  }\n`;\n\nexport const ErrorMessage = styled.span`\n  font-style: normal;\n  font-weight: 600;\n  font-size: 14px;\n  line-height: 17px;\n  color: var(--text-error-color);\n`;\n\nexport const RegisterGooseImage = styled.img`\n  display: none;\n  @media (min-width: 1350px) {\n    position: fixed;\n    width: 400px;\n    height: 416px;\n    left: 50px;\n    bottom: 0;\n    display: block;\n  }\n`;\n\nexport const LoginGooseImage = styled.img`\n  display: none;\n  @media (min-width: 1350px) {\n    position: fixed;\n    width: 368px;\n    height: 521px;\n    right: 60px;\n    bottom: 19px;\n    display: block;\n  }\n`;\nexport const BtnGoogle = styled.a`\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  width: 100%;\n  height: 46px;\n  font-size: 14px;\n  column-gap: 0.8125rem;\n  padding: 14px;\n  margin-top: 14px;\n  border: 1px solid var(--accent-background-color);\n  box-shadow: var(--shadow-logout-btn);\n  border-radius: 16px;\n  cursor: pointer;\n  transition: all var(--animation);\n  &:hover,\n  :focus {\n    transform: scale(1.02);\n    background: var(--hover-btn-background-color);\n  }\n  @media (min-width: 768px) {\n    width: 400px;\n    height: 56px;\n    font-size: 16px;\n  }\n  @media (max-width: 375px) {\n    width: 100%;\n    padding: 16px;\n    margin-bottom: 12px;\n    font-size: 12px;\n  }\n`;\n\nexport const GoogleIcon = styled.svg`\n  fill: none;\n  stroke: var(--accent-background-color);\n  width: 24px;\n  margin-right: 6px;\n  transition: all var(--animation);\n`;\n\nexport const Or = styled.p`\n  align-self: center;\n  font-style: normal;\n  font-weight: 600;\n  font-size: 14px;\n  line-height: 17px;\n  /* margin-top: 24px; */\n  /* margin-bottom: 8px; */\n  color: var(--primary-text-color);\n  @media (min-width: 768px) {\n    margin-top: 18px;\n  }\n`;\n","import { useDispatch, useSelector } from 'react-redux';\nimport { useEffect } from 'react';\nimport { login } from '../../../redux/auth/operations';\nimport { Formik } from 'formik';\nimport * as yup from 'yup';\nimport { nanoid } from 'nanoid';\n\nimport { setAuthHeader } from '../../../redux/auth/operations';\nimport { refreshUser } from '../../../redux/auth/operations';\nimport { selectToken } from '../../../redux/auth/selectors';\nimport { AuthNavigate } from '../../../components/Auth/AuthNavigate/AuthNavigate';\n\nimport {\n  Wrapper,\n  StyleButton,\n  StyleFormContainer,\n  StyleFormTitle,\n  Form,\n  StyleInput,\n  StyleLabel,\n  StyleParaghraph,\n  ErrorMessage,\n  ButtonText,\n  Svg,\n  LoginGooseImage,\n  BtnGoogle,\n  GoogleIcon,\n  Or,\n} from '../RegisterForm/RegisterForm.styled';\nimport gooseLogin2x from '../../../images/goose-login-2x.png';\nimport gooseLogin from '../../../images/goose-login.png';\nimport Icons from '../../../images/sprite.svg';\n\nconst validationSchema = yup.object().shape({\n  email: yup\n    .string()\n    .email('Email must be valid email')\n    .required('Email is a required field'),\n  password: yup\n    .string()\n    .min(8, 'Password must be at least 8 characters')\n    .max(16, 'Password must be at most 16 characters')\n    .required('Password is a required field'),\n});\n\nexport const LoginForm = () => {\n  const dispatch = useDispatch();\n  const emailId = nanoid();\n  const passwordId = nanoid();\n\n  const token = useSelector(selectToken);\n  setAuthHeader(token);\n  useEffect(() => {\n    dispatch(refreshUser());\n  }, [token, dispatch]);\n\n  return (\n    <Formik\n      initialValues={{\n        email: '',\n        password: '',\n      }}\n      onSubmit={(values, { resetForm }) => {\n        dispatch(\n          login({\n            email: values.email,\n            password: values.password,\n          })\n        );\n        resetForm();\n      }}\n      validationSchema={validationSchema}\n    >\n      {({\n        errors,\n        touched,\n        values,\n        handleSubmit,\n        handleBlur,\n        handleChange,\n        isSubmitting,\n      }) => (\n        <Wrapper>\n          <StyleFormContainer>\n            <Form autoComplete=\"off\" onSubmit={handleSubmit}>\n              <StyleFormTitle>Log In</StyleFormTitle>\n\n              <StyleLabel htmlFor={emailId}>\n                <StyleParaghraph>Email</StyleParaghraph>\n                <StyleInput\n                  type=\"email\"\n                  name=\"email\"\n                  id={emailId}\n                  onChange={handleChange}\n                  onBlur={handleBlur}\n                  value={values.email}\n                  placeholder=\"Enter email\"\n                />\n              </StyleLabel>\n              <ErrorMessage>\n                {errors.email && touched.email && errors.email}\n              </ErrorMessage>\n\n              <StyleLabel htmlFor={passwordId}>\n                <StyleParaghraph>Password</StyleParaghraph>\n                <StyleInput\n                  type=\"password\"\n                  name=\"password\"\n                  id={passwordId}\n                  onChange={handleChange}\n                  onBlur={handleBlur}\n                  value={values.password}\n                  placeholder=\"Enter password\"\n                />\n              </StyleLabel>\n              <ErrorMessage>\n                {errors.password && touched.password && errors.password}\n              </ErrorMessage>\n              <StyleButton type=\"submit\" disabled={isSubmitting}>\n                <ButtonText>\n                  Log In\n                  <Svg>\n                    <use href={`${Icons}#login-door-sf`}></use>\n                  </Svg>\n                </ButtonText>\n              </StyleButton>\n              <Or>or</Or>\n              <BtnGoogle href=\"https://goosetrack-backend.onrender.com/api/auth/google\">\n                <GoogleIcon>\n                  <use href={`${Icons}#icon-google`}></use>\n                </GoogleIcon>\n                Log in with Google\n              </BtnGoogle>\n            </Form>\n            <AuthNavigate route=\"/register\" content=\"Sign Up\" />\n            <LoginGooseImage\n              srcSet={`${gooseLogin} 1x, ${gooseLogin2x} 2x`}\n              src={gooseLogin2x}\n              alt=\"goose\"\n            />\n          </StyleFormContainer>\n        </Wrapper>\n      )}\n    </Formik>\n  );\n};\n","import { LoginForm } from '../../components/Auth/LoginForm/LoginForm';\nimport { AuthNavigate } from '../../components/Auth/AuthNavigate/AuthNavigate';\nimport {\n  Container,\n  CloudButton,\n  ButtonText,\n} from '../Register/RegisterPage.styled';\n\nconst LoginPage = () => {\n  return (\n    <Container>\n      <CloudButton to=\"/\">\n        <ButtonText>Home</ButtonText>\n      </CloudButton>\n      <LoginForm />\n      <AuthNavigate route={'/register'} pageName={'Sign Up'} />\n    </Container>\n  );\n};\n\nexport default LoginPage;\n","import styled from 'styled-components';\nimport { Link } from 'react-router-dom';\n\nconst media = {\n  tablet: '@media screen and (min-width: 768px)',\n  desktop: '@media screen and (min-width: 1440px)',\n  mobile: '@media screen and (max-width: 767px)',\n};\n\nexport const Container = styled.div`\n  min-height: 100vh;\n  background: var(--auth-bg-color);\n  display: flex;\n  flex-direction: column;\n  justify-content: center;\n  align-items: flex-start;\n  padding-top: 20px;\n  padding-bottom: 20px;\n\n  @media (max-width: 375px) {\n    width: 100%;\n    padding-left: 20px;\n    padding-right: 20px;\n  }\n`;\n\nexport const CloudButton = styled(Link)`\n  ${media.tablet} {\n  display: flex;\n  position: fixed;\n  top: 25px;\n  left: 80px;\n  width: 5em;\n  height: 5em;\n  color: var(--cloud-text-color);\n  text-align: center;\n  justify-content: center;\n  align-items: center;\n  background: #ffffff;\n  border-width: 0.25em;\n  border-style: solid;\n  border-color: var(--border-cloud-color);\n  border-radius: 50% 50% 0 0;\n  z-index: 9999;\n\n  &:after,\n  &:before {\n    content: '';\n    position: absolute;\n    bottom: -0.25em;\n    background: inherit;\n    border-width: 0.25em;\n    border-style: solid;\n    border-color: var(--border-cloud-color);\n  }\n\n  &:after {\n    right: 80%;\n    width: 80%;\n    height: 80%;\n    border-right: none;\n    border-radius: 50% 50% 0;\n  }\n\n  &:before {\n    left: 80%;\n    width: 60%;\n    height: 60%;\n    border-left: none;\n    border-radius: 50% 50% 50% 0;\n  }\n\n  &:hover {\n    background-color: #abcdef;\n    color: #ffffff;\n  }  \n}\n}`;\n\nexport const ButtonText = styled.span`\n  ${media.tablet} {\n    display: inline-block;\n    line-height: 1;\n    z-index: 5;\n    padding-top: 25px;\n    font-weight: 900;\n  }\n\n  ${media.mobile} {\n    margin-left: 30px;\n    font-style: normal;\n    font-weight: 600;\n    font-size: 16px;\n    line-height: 20px;\n    border-bottom: 1px solid var(--color-button-period-type);\n    text-decoration: none;\n    color: var(--accent-background-color);\n    text-shadow: var(--logo-txt-shadow);\n\n    &:hover,\n    :focus {\n      color: var(--accent-background-color);\n      border-color: var(--accent-background-color);\n      transform: scale(1.1);\n    }\n  }\n\n    @media (max-width: 375px) {\n      margin: 0;\n    }\n  }\n`;\n"],"names":["AuthLink","styled","Link","AuthNavigate","route","content","to","Wrapper","StyleFormContainer","Form","StyleFormTitle","StyleLabel","StyleInput","StyleParaghraph","StyleButton","ButtonText","Svg","ErrorMessage","RegisterGooseImage","LoginGooseImage","BtnGoogle","GoogleIcon","Or","validationSchema","yup","shape","email","required","password","min","max","LoginForm","dispatch","useDispatch","emailId","nanoid","passwordId","token","useSelector","selectToken","setAuthHeader","useEffect","refreshUser","initialValues","onSubmit","values","resetForm","login","errors","touched","handleSubmit","handleBlur","handleChange","isSubmitting","autoComplete","htmlFor","type","name","id","onChange","onBlur","value","placeholder","disabled","href","Icons","srcSet","gooseLogin","gooseLogin2x","src","alt","pageName","media","Container","CloudButton"],"sourceRoot":""}