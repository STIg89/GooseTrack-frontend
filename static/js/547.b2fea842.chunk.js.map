{"version":3,"file":"static/js/547.b2fea842.chunk.js","mappings":"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","sources":["redux/auth/selectors.js","components/Auth/RegisterForm/RegisterForm.styled.js","images/log-in-01.svg","components/Auth/AuthNavigate/AuthNavigate.styled.js","components/Auth/AuthNavigate/AuthNavigate.jsx","components/Auth/RegisterForm/RegisterForm.jsx","pages/Register/RegisterPage.styled.js","pages/Register/RegisterPage.jsx"],"sourcesContent":["export const selectIsLoggedIn = state => state.auth.isLoggedIn;\n\nexport const selectUser = state => state.auth.user;\n\nexport const selectIsRefreshing = state => state.auth.isRefreshing;\n\nexport const selectToken = state => state.auth.token;\n","import styled from 'styled-components';\n\nexport const Wrapper = styled.div`\n  position: relative;\n  height: 100vh;\n  width: 100%;\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n  justify-content: center;\n  background-color: #dcebf7;\n`;\n\nexport const RegisterFormContainer = styled.div`\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n  justify-content: center;\n`;\n\nexport const Form = styled.form`\n  display: flex;\n  flex-direction: column;\n  // padding: 40px 24px;\n  width: 335px;\n  margin-bottom: 18px;\n  background-color: #fff;\n  border-radius: 8px;\n\n  @media (min-width: 768px) {\n    width: 480px;\n    padding: 40px;\n    margin-bottom: 24px;\n  }\n`;\n\nexport const RegisterFormTitle = styled.h1`\n  font-family: 'Inter', sans-serif;\n  font-style: normal;\n  font-weight: 600;\n  font-size: 1.125rem;\n  line-height: 1.5rem;\n  color: #3e85f3;\n  text-shadow: 0px 47px 355px rgba(0, 0, 0, 0.07),\n    0px 9.4px 57.6875px rgba(0, 0, 0, 0.035);\n  margin-bottom: 22px;\n`;\n\nexport const RegisterLabel = styled.label`\n  display: flex;\n  flex-direction: column;\n  margin-bottom: 0.5rem;\n  font-family: 'Inter', sans-serif;\n  font-style: normal;\n  font-weight: 600;\n  font-size: 12px;\n  line-height: 15px;\n  color: #616161;\n`;\n\nexport const RegisterInput = styled.input`\n  background-color: #ffffff;\n  outline: none;\n  border: 1px solid rgba(220, 227, 229, 0.6);\n  border-radius: 8px;\n  padding: 0.875rem;\n  max-width: 400px;\n  &::placeholder {\n    font-family: 'Inter', sans-serif;\n    font-style: normal;\n    font-weight: 400;\n    font-size: 16px;\n    line-height: 18px;\n    color: #dce3e5;\n  }\n`;\n\nexport const RegisterParaghraph = styled.p`\n  font-family: 'Inter', sans-serif;\n  font-style: normal;\n  font-weight: 600;\n  font-size: 14px;\n  line-height: 17px;\n  margin-top: 24px;\n  margin-bottom: 8px;\n  color: #111111;\n\n  @media (min-width: 768px) {\n    margin-top: 18px;\n  }\n`;\n\nexport const RegisterButton = styled.button`\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  width: 287px;\n  height: 46px;\n  column-gap: 0.8125rem;\n  padding: 14px;\n  margin-top: 30px;\n  background: #3e85f3;\n  box-shadow: 4px 2px 16px rgba(136, 165, 191, 0.48);\n  border-radius: 16px;\n  border: none;\n  cursor: pointer;\n\n  &:hover,\n  :focus {\n    transform: scale(1.02);\n  }\n\n  @media (min-width: 768px) {\n    width: 400px;\n    height: 56px;\n  }\n`;\n\nexport const ButtonText = styled.span`\n  font-family: 'Inter', sans-serif;\n  font-style: normal;\n  font-weight: 600;\n  font-size: 14px;\n  line-height: 18px;\n  letter-spacing: -0.02em;\n  color: #fff;\n\n  @media (min-width: 768px) {\n    font-size: 18px;\n    line-height: 24px;\n  }\n`;\n\nexport const Svg = styled.svg`\n  width: 18px;\n  height: 18px;\n  fill: transparent;\n  stroke: #ffffff;\n\n  @media (min-width: 768px) {\n    width: 20px;\n    height: 20px;\n  }\n`;\n\nexport const ErrorMessage = styled.span`\n  font-family: 'Inter', sans-serif;\n  font-style: normal;\n  font-weight: 600;\n  font-size: 14px;\n  line-height: 17px;\n  color: red;\n`;\n\nexport const RegisterGooseImage = styled.img`\n  display: none;\n  @media (min-width: 768px) {\n    position: absolute;\n    width: 400px;\n    height: 454px;\n    left: 50px;\n    bottom: 0;\n    display: block;\n  }\n`;\n","var _path;\n\nvar _excluded = [\"title\", \"titleId\"];\n\nfunction _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\nimport * as React from \"react\";\n\nfunction SvgLogIn01(_ref, svgRef) {\n  var title = _ref.title,\n      titleId = _ref.titleId,\n      props = _objectWithoutProperties(_ref, _excluded);\n\n  return /*#__PURE__*/React.createElement(\"svg\", _extends({\n    width: 20,\n    height: 20,\n    viewBox: \"0 0 20 20\",\n    fill: \"none\",\n    xmlns: \"http://www.w3.org/2000/svg\",\n    ref: svgRef,\n    \"aria-labelledby\": titleId\n  }, props), title ? /*#__PURE__*/React.createElement(\"title\", {\n    id: titleId\n  }, title) : null, _path || (_path = /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M12.5 2.5H13.5C14.9001 2.5 15.6002 2.5 16.135 2.77248C16.6054 3.01217 16.9878 3.39462 17.2275 3.86502C17.5 4.3998 17.5 5.09987 17.5 6.5V13.5C17.5 14.9001 17.5 15.6002 17.2275 16.135C16.9878 16.6054 16.6054 16.9878 16.135 17.2275C15.6002 17.5 14.9001 17.5 13.5 17.5H12.5M8.33333 5.83333L12.5 10M12.5 10L8.33333 14.1667M12.5 10L2.5 10\",\n    stroke: \"white\",\n    strokeWidth: 2,\n    strokeLinecap: \"round\",\n    strokeLinejoin: \"round\"\n  })));\n}\n\nvar ForwardRef = /*#__PURE__*/React.forwardRef(SvgLogIn01);\nexport default __webpack_public_path__ + \"static/media/log-in-01.6b7cd95e83a23d4402cfb6cb07627de9.svg\";\nexport { ForwardRef as ReactComponent };","import styled from 'styled-components';\nimport { Link } from 'react-router-dom';\n\nexport const AuthLink = styled(Link)`\n  font-family: 'Inter', sans-serif;\n  font-style: normal;\n  font-weight: 600;\n  font-size: 12px;\n  line-height: 14px;\n  border-bottom: 1px solid #3e85f3;\n  text-decoration: none;\n  color: #3e85f3;\n  text-shadow: 0px 47px 355px rgba(0, 0, 0, 0.07),\n    0px 9.4px 57.6875px rgba(0, 0, 0, 0.035);\n  &:hover,\n  :focus {\n    color: #111111;\n    border-color: #111111;\n  }\n\n  @media (min-width: 768px) {\n    font-size: 18px;\n    line-height: 24px;\n  }\n`;\n","import { AuthLink } from './AuthNavigate.styled';\n\nexport const AuthNavigate = ({ route, content }) => (\n  <AuthLink to={route}>{content}</AuthLink>\n);\n","import { useDispatch, useSelector } from 'react-redux';\nimport { useEffect } from 'react';\nimport { register } from '../../../redux/auth/operations';\nimport { Formik } from 'formik';\nimport * as yup from 'yup';\nimport { nanoid } from 'nanoid';\n\nimport { setAuthHeader } from '../../../redux/auth/operations';\nimport { refreshUser } from '../../../redux/auth/operations';\nimport { selectToken } from '../../../redux/auth/selectors';\n\nimport {\n  Wrapper,\n  RegisterButton,\n  RegisterFormContainer,\n  RegisterFormTitle,\n  Form,\n  RegisterInput,\n  RegisterLabel,\n  RegisterParaghraph,\n  ErrorMessage,\n  ButtonText,\n  RegisterGooseImage,\n} from './RegisterForm.styled';\nimport Icon from '../../../images/log-in-01.svg';\nimport GooseRegister from '../../../images/goose-register.png';\nimport GooseRegister2x from '../../../images/goose-register@2x.png';\nimport { AuthNavigate } from '../AuthNavigate/AuthNavigate';\n\nconst routes = {\n  register: '/register',\n};\n\nconst validationSchema = yup.object().shape({\n  name: yup\n    .string()\n    .min(3)\n    .max(30, 'Name must be at most 30 characters')\n    .required('Please enter your name'),\n  email: yup\n    .string()\n    .email('Email must be valid email')\n    .required('Email is a required field'),\n  password: yup\n    .string()\n    .min(8, 'Password must be at least 8 characters')\n    .max(16, 'Password must be at most 16 characters')\n    .required('Password is a required field'),\n});\n\nexport const RegisterForm = () => {\n  const dispatch = useDispatch();\n  const emailId = nanoid();\n  const passwordId = nanoid();\n  const nameId = nanoid();\n\n  const token = useSelector(selectToken);\n  setAuthHeader(token);\n  useEffect(() => {\n    dispatch(refreshUser());\n  }, [token, dispatch]);\n\n  return (\n    <Formik\n      initialValues={{\n        name: '',\n        email: '',\n        password: '',\n      }}\n      onSubmit={(values, { resetForm }) => {\n        dispatch(\n          register({\n            name: values.name,\n            email: values.email,\n            password: values.password,\n          })\n        );\n        resetForm();\n      }}\n      validationSchema={validationSchema}\n    >\n      {({\n        errors,\n        touched,\n        values,\n        handleSubmit,\n        handleBlur,\n        handleChange,\n        isSubmitting,\n      }) => (\n        <Wrapper>\n          <RegisterFormContainer>\n            <Form autoComplete=\"off\" onSubmit={handleSubmit}>\n              <RegisterFormTitle>Sign Up</RegisterFormTitle>\n              <RegisterLabel htmlFor={nameId}>\n                <RegisterParaghraph>Name</RegisterParaghraph>\n                <RegisterInput\n                  type=\"text\"\n                  name=\"name\"\n                  id={nameId}\n                  onChange={handleChange}\n                  onBlur={handleBlur}\n                  value={values.name}\n                  placeholder=\"Enter your name\"\n                />\n              </RegisterLabel>\n              <ErrorMessage>\n                {errors.name && touched.name && errors.name}\n              </ErrorMessage>\n              <RegisterLabel htmlFor={emailId}>\n                <RegisterParaghraph>Email</RegisterParaghraph>\n                <RegisterInput\n                  type=\"email\"\n                  name=\"email\"\n                  id={emailId}\n                  onChange={handleChange}\n                  onBlur={handleBlur}\n                  value={values.email}\n                  placeholder=\"Enter email\"\n                />\n              </RegisterLabel>\n              <ErrorMessage>\n                {errors.email && touched.email && errors.email}\n              </ErrorMessage>\n              <RegisterLabel htmlFor={passwordId}>\n                <RegisterParaghraph>Password</RegisterParaghraph>\n                <RegisterInput\n                  type=\"password\"\n                  name=\"password\"\n                  id={passwordId}\n                  onChange={handleChange}\n                  onBlur={handleBlur}\n                  value={values.password}\n                  placeholder=\"Enter password\"\n                />\n              </RegisterLabel>\n              <ErrorMessage>\n                {errors.password && touched.password && errors.password}\n              </ErrorMessage>\n              <RegisterButton type=\"submit\" disabled={isSubmitting}>\n                <ButtonText>\n                  Sign Up\n                  <img src={Icon} alt=\"Login Icon\" />\n                </ButtonText>\n              </RegisterButton>\n            </Form>\n            <AuthNavigate route={routes.login} content=\"Log In\" />\n            <RegisterGooseImage\n              srcSet={`${GooseRegister} 1x, ${GooseRegister2x} 2x`}\n              src={GooseRegister}\n              alt=\"goose\"\n            />\n          </RegisterFormContainer>\n        </Wrapper>\n      )}\n    </Formik>\n  );\n};\n","import styled from 'styled-components';\n\nexport const Container = styled.div`\n  min-height: 100vh;\n  background: #dcebf7;\n\n  display: flex;\n  flex-direction: column;\n  justify-content: center;\n  align-items: center;\n\n  padding-top: 20px;\n  padding-bottom: 20px;\n`;\n","import { RegisterForm } from '../../components/Auth/RegisterForm/RegisterForm';\nimport { AuthNavigate } from '../../components/Auth/AuthNavigate/AuthNavigate';\nimport { Container } from '../Register/RegisterPage.styled';\n\nconst RegisterPage = () => {\n  return (\n    <Container>\n      <RegisterForm />\n      <AuthNavigate route={'/login'} pageName={'Log In'} />\n    </Container>\n  );\n};\n\nexport default RegisterPage;\n"],"names":["selectToken","state","auth","token","Wrapper","styled","RegisterFormContainer","Form","RegisterFormTitle","RegisterLabel","RegisterInput","RegisterParaghraph","RegisterButton","ButtonText","ErrorMessage","RegisterGooseImage","AuthLink","Link","AuthNavigate","route","content","to","routes","register","validationSchema","yup","shape","name","min","max","required","email","password","RegisterForm","dispatch","useDispatch","emailId","nanoid","passwordId","nameId","useSelector","setAuthHeader","useEffect","refreshUser","initialValues","onSubmit","values","resetForm","errors","touched","handleSubmit","handleBlur","handleChange","isSubmitting","autoComplete","htmlFor","type","id","onChange","onBlur","value","placeholder","disabled","src","Icon","alt","login","srcSet","GooseRegister","GooseRegister2x","Container","pageName"],"sourceRoot":""}